[{"sha": "fc2754204fb173681fe73e1442064e1fbb3196db", "time": "2022-11-15T00:21:14Z", "changed_files": ["api/types/transfer/importexport.proto", "api/types/transfer/progress.proto", "pkg/transfer/local/import.go", "pkg/transfer/local/progress.go", "pkg/transfer/proxy/transfer.go", "pkg/transfer/streaming/stream.go", "pkg/transfer/transfer.go", "services/streaming/service.go", "services/transfer/service.go"], "title": "Cleanup code comments and lint fixes\n\nSigned-off-by: Derek McGowan <derek@mcg.dev>"}, {"sha": "42eedc0bc733f579b37874a86ce9f72d41b355a4", "time": "2022-09-29T05:23:52Z", "changed_files": ["cmd/ctr/commands/images/import.go", "cmd/ctr/commands/images/pull.go", "cmd/ctr/commands/images/push.go"], "title": "Update ctr to make local the default for distribution\n\nDisable using transfer service by default for now\n\nSigned-off-by: Derek McGowan <derek@mcg.dev>"}, {"sha": "478f1c934d3b08b6eed2be566ca1b63ad08cb658", "time": "2022-09-14T05:10:34Z", "changed_files": [".golangci.yml", "pkg/transfer/archive/exporter.go", "pkg/transfer/image/imagestore.go", "pkg/transfer/image/registry.go", "pkg/transfer/local/pull.go", "pkg/transfer/local/push.go", "pkg/transfer/local/transfer.go", "pkg/transfer/proxy/transfer.go", "pkg/transfer/transfer.go", "plugins/transfer/plugin.go"], "title": "Lint fixes\n\nSigned-off-by: Derek McGowan <derek@mcg.dev>"}, {"sha": "ebd63adac22e6fad6f6a3e59ecf4185426a3d6ea", "time": "2022-11-25T08:22:36Z", "changed_files": ["integration/client/go.mod"], "title": "integration/client: fix go.mod grouping\n\ngo.mod doesn't always do a great job on keeping the dependencies grouped in the\nright block; 2b60770c4b210e769d2fcbeaf25588af9494a822 added an extra \"require\"\nblock, after which things went downward.\n\nThis patch is grouping them back in the right block to nudge it in the right\ndirection.\n\nSigned-off-by: Sebastiaan van Stijn <github@gone.nl>"}, {"sha": "8d868dadb746aabfd3583d834510109afe9b1919", "time": "2022-11-23T20:01:32Z", "changed_files": ["contrib/apparmor/template.go"], "title": "Add ptrace readby and tracedby to default AppArmor profile\n\nFixes https://github.com/containerd/containerd/issues/7695. The default profile allows processes within the container to trace others, but blocks reads/traces. This means that diagnostic facilities in processes can't easily collect crash/hang dumps. A usual workflow used by solutions like crashpad and similar projects is that the process that's unresponsive will spawn a process to collect diagnostic data using ptrace. seccomp-bpf, yama ptrace settings, and CAP_SYS_PTRACE already provide security mechanisms to reduce the scopes in which the API can be used. This enables reading from /proc/* files provided the tracer process passes all other checks.\n\nSigned-off-by: Juan Hoyos <juan.s.hoyos@outlook.com>"}, {"sha": "a22f0a4c3e246d0b2e772832c76452692da700c5", "time": "2022-11-22T12:14:07Z", "changed_files": ["archive/tar.go", "archive/tar_opts.go", "archive/tar_test.go"], "title": "archive: set WithModTimeUpperBound when WithSourceDateEpoch is set\n\nWithModTimeUpperBound sets the upper bound value of the ModTime property\nof the tar entry structs.\n\nWithSourceDateEpoch now implies WithModTimeUpperBound too,\nin addition to WithWhiteoutTime.\n\nFor moby/buildkit issue 3296\n\nSigned-off-by: Akihiro Suda <akihiro.suda.cz@hco.ntt.co.jp>"}, {"sha": "ed3a49c0e6b80f9fa352a13b34a9d18ca981bf29", "time": "2022-11-16T10:50:31Z", "changed_files": ["contrib/fuzz/oss_fuzz_build.sh", "go.mod", "go.sum", "integration/client/go.mod", "integration/client/go.sum", "oss_fuzz.go", "...z/go-118-fuzz-build/utils/test_helpers.go \u2192 .../AdamKorcz/go-118-fuzz-build/testing/f.go", "vendor/github.com/AdamKorcz/go-118-fuzz-build/testing/t.go", "vendor/github.com/AdamKorcz/go-118-fuzz-build/testing/unsupported_funcs.go", "vendor/golang.org/x/crypto/AUTHORS", "vendor/golang.org/x/crypto/CONTRIBUTORS"], "title": "fix for OSS-Fuzz infra changes\n\nSigned-off-by: AdamKorcz <adam@adalogics.com>"}, {"sha": "e224f77eb7b4bd062485d6b0a3b8ba7181861bca", "time": "2022-11-18T07:04:19Z", "changed_files": ["contrib/seccomp/seccomp_default.go"], "title": "Add process_vm read and write calls to default seccomp profile\n\nFollow up to 94faa70df4d78538605bb492010954a7e3bec67a. The commit referenced allowed `ptrace` calls in the default seccomp profile following the usual tracing security checks in for Kernels newer than 4.8. Kernels prior to this version are susceptible to [CVE-2019-2054](https://github.com/advisories/GHSA-qgfr-27qf-f323).  Moby's default had allowed for `ptrace` for kernels newer than 4.8 at the time the commit was created. The current [seccomp default](https://github.com/moby/moby/blob/master/profiles/seccomp/default_linux.go#L405-L417) has been updated to include `process_vm_read` and `process_vm_write`. Mirror that policy to complete the classic ptrace set of APIs.\n\nSigned-off-by: Juan Hoyos <juan.s.hoyos@outlook.com>"}, {"sha": "c245347e96547adfd8e5df8d90d54485a152f611", "time": "2022-11-16T15:04:26Z", "changed_files": ["snapshots/overlay/overlay.go"], "title": "tx rollback when GetInfo return error\n\nSigned-off-by: guodong <guodong9211@gmail.com>"}, {"sha": "b0133882f5370794bb2952d256b37c86475d46c7", "time": "2022-11-14T15:35:28Z", "changed_files": ["script/setup/critools-version", "script/setup/install-critools"], "title": "bump critools into ca1571e6edd116b2c95f52e3dfa0b4779b74223a\n\nIt is to fix #7264 with kubernetes-sigs/cri-tools#1026. Currently, it\nis not release tag but it can save our time to prevent from rerun CI manually.\nThere will be follow-up when kubernetes v1.26 releases.\n\nREF: https://github.com/kubernetes/sig-release/tree/master/releases/release-1.26#summary\n\nSigned-off-by: Wei Fu <fuweid89@gmail.com>"}, {"sha": "0c63c42f8183d13c2c106c01f5bb3560d39b3295", "time": "2022-11-11T16:09:31Z", "changed_files": ["pkg/cri/server/helpers.go", "pkg/cri/store/container/status.go"], "title": "Fix slice append error\n\nIn golang when copy a slice, if the slice is initialized with a\ndesired length, then appending to it will cause the size double.\n\nSigned-off-by: bin liu <liubin0329@gmail.com>"}, {"sha": "91e295d766e384fd18c6a240917eadf4aedb4ddd", "time": "2022-11-04T03:49:37Z", "changed_files": ["cmd/ctr/commands/pprof/pprof.go"], "title": "Add `--debug` args\n\nSigned-off-by: Shiming Zhang <wzshiming@foxmail.com>"}, {"sha": "c953eecb79bd6d6f9e11466f6a397b9fdde1f0c1", "time": "2022-11-03T13:21:07Z", "changed_files": ["pkg/cri/config/config.go", "pkg/cri/config/config_test.go", "pkg/cri/config/config_unix.go", "pkg/cri/sbserver/sandbox_remove.go", "pkg/cri/sbserver/sandbox_run.go", "pkg/cri/sbserver/sandbox_stop.go", "pkg/cri/sbserver/service.go", "pkg/cri/sbserver/service_test.go"], "title": "Sandbox API: Add a new mode config for sandbox controller impls\n\nAdd a new config as sandbox controller mod, which can be either\n\"podsandbox\" or \"shim\". If empty, set it to default \"podsandbox\"\nwhen CRI plugin inits.\n\nSigned-off-by: Zhang Tianyang <burning9699@gmail.com>"}, {"sha": "7de88c5ba35b55bcfce9eddc51d2c187982e3f86", "time": "2022-11-06T22:13:27Z", "changed_files": ["reference/docker/helpers.go", "reference/docker/normalize.go"], "title": "reference/docker: align files with original code\n\nThis package was forked from the https://github.com/distribution/distribution\nrepository in commit 901bcb2231466229d27aee8d38a6e2fcdc95015e, but that commit\ndid a plain copy of the code (minus tests), and rewrote the code to be in a\nsingle file. The same commit also removed some deprecated code for handling\n\"shortid\" references (ParseAnyReferenceWithSet() function), in order to avoid\nthe \"digestset\" dependency from the distribution repo.\n\nAt the time, containerd used the distribution/distribution package from this\ncommit: https://github.com/distribution/distribution/commit/0d3efadf0154c2b8a4e7b6621fff9809655cc580\n\nSince the code was forked, both containerd and distribution have received\nimprovements and fixes, so unfortunately, the code started to diverge.\n\nI'm planning to reconcile the packages (potentially by using a shared module),\nand this is the first commit to assist with that.\n\nThis patch restructures the reference/docker package to split the code into the\nsame files as are used in the upstream distribution/distribution repository.\nThis makes it easier to compare the implementations in both repositories (to\nallow synchronizing changes).\n\nNo changes are applied yet, other than splitting the code (follow-up commits\nwill take care of syncing changes across).\n\nSigned-off-by: Sebastiaan van Stijn <github@gone.nl>"}, {"sha": "f0bf9e7f8b7e5f61057699b710a7345c5bfc8c82", "time": "2022-11-03T22:26:51Z", "changed_files": ["remotes/docker/config/config_unix.go", "remotes/docker/config/config_windows.go"], "title": "Support default hosts.toml configuration\n\nAdd support for an optional `default` registry hosts config, should no\nother hosts config match.\n\nSigned-off-by: Jess <jess@ros.io>"}, {"sha": "2d9f0f2fbd2211f95162132d2a44e3ee7e4eed0e", "time": "2022-11-03T18:16:55Z", "changed_files": ["RELEASES.md"], "title": "add additional info in backport process\n\nadd information in backporting process related to cherry-picking\nmain PR and related fixes\n\nSigned-off-by: Akhil Mohan <makhil@vmware.com>"}, {"sha": "3b87d46ce291565012e30956cb3772026c39d58d", "time": "2022-09-29T20:22:55Z", "changed_files": ["docs/tracing.md", "integration/client/go.mod", "integration/client/go.sum", "pkg/cri/sbserver/helpers.go", "pkg/cri/sbserver/image_pull.go", "pkg/cri/sbserver/image_remove.go", "pkg/cri/sbserver/image_status.go", "pkg/cri/sbserver/instrumented_service.go", "pkg/cri/server/helpers.go"], "title": "Add tracing spans in CRI image service and pull.go\n\nSigned-off-by: Swagat Bora <sbora@amazon.com>\n\nAdd spans around image unpack operations\nUse image.ref to denote image name and image.id for the image config digest\nAdd top-level spand and record errors in the CRI instrumentation service"}, {"sha": "902b96cf25f6c6e793f9c0a78d33615ac355dbdb", "time": "2022-11-03T14:52:41Z", "changed_files": ["sys/reaper/reaper_unix.go"], "title": "fix comments\n\nSigned-off-by: yaozhenxiu <946666800@qq.com>"}, {"sha": "78ac0046a7af3ff5beeb53d56ba627ec0cf7b32d", "time": "2022-11-01T16:24:52Z", "changed_files": ["cmd/ctr/commands/images/export.go"], "title": "ctr export strictly match default platform\n\nSigned-off-by: Yasin Turan <turyasin@amazon.com>"}, {"sha": "48daccb4dd225784cb802b5ea3fd1d96d18eec8e", "time": "2022-10-13T03:50:20Z", "changed_files": ["cmd/ctr/commands/tasks/start.go", "cmd/ctr/commands/tasks/tasks_unix.go", "cmd/ctr/commands/tasks/tasks_windows.go"], "title": "fix the --no-pivot flag being ignored by `ctr tasks start`\n\nSigned-off-by: Iceber Gu <wei.cai-nat@daocloud.io>"}, {"sha": "f9c80be1bbc02f0f2b725494ef2cda5abb54ed4c", "time": "2022-08-31T07:43:17Z", "changed_files": [".golangci.yml", "archive/tar_unix.go", "integration/main_test.go", "oci/spec_opts.go", "oci/spec_opts_nonlinux.go", "oci/utils_unix.go", "pkg/cri/sbserver/container_stats.go", "pkg/cri/sbserver/container_stats_list.go", "pkg/cri/sbserver/sandbox_stats.go", "pkg/cri/sbserver/sandbox_stats_list.go", "pkg/cri/sbserver/service.go", "pkg/cri/server/container_stats.go", "pkg/cri/server/container_stats_list.go", "pkg/cri/server/sandbox_stats.go", "pkg/cri/server/sandbox_stats_list.go", "pkg/cri/server/service.go", "pkg/cri/store/container/metadata.go", "pkg/cri/store/container/status.go", "pkg/cri/store/sandbox/metadata.go", "pkg/progress/escape.go"], "title": "remove unneeded nolint-comments (nolintlint), disable deprecated linters\n\nRemove nolint-comments that weren't hit by linters, and remove the \"structcheck\"\nand \"varcheck\" linters, as they have been deprecated:\n\n    WARN [runner] The linter 'structcheck' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter.  Replaced by unused.\n    WARN [runner] The linter 'varcheck' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter.  Replaced by unused.\n    WARN [linters context] structcheck is disabled because of generics. You can track the evolution of the generics support by following the https://github.com/golangci/golangci-lint/issues/2649.\n\nSigned-off-by: Sebastiaan van Stijn <github@gone.nl>"}, {"sha": "29c7fc9520c56cae56334dc55fc61b64691e77f4", "time": "2022-08-30T21:05:52Z", "changed_files": ["archive/tar_unix.go", "contrib/fuzz/content_fuzzer.go", "integration/client/restart_monitor_test.go", "oci/spec_opts.go", "oci/spec_opts_linux_test.go", "oci/spec_opts_nonlinux.go", "oci/utils_unix.go", "pkg/cri/opts/container.go", "pkg/cri/sbserver/service.go", "pkg/cri/server/service.go", "pkg/cri/store/container/container.go", "pkg/cri/store/image/image.go", "pkg/cri/store/sandbox/sandbox.go", "pkg/netns/netns_linux.go", "pkg/progress/escape.go", "pkg/runtimeoptions/v1/doc.go"], "title": "clean-up \"nolint\" comments, remove unused ones\n\n- fix \"nolint\" comments to be in the correct format (`//nolint:<linters>[,<linter>`\n  no leading space, required colon (`:`) and linters.\n- remove \"nolint\" comments for errcheck, which is disabled in our config.\n- remove \"nolint\" comments that were no longer needed (nolintlint).\n- where known, add a comment describing why a \"nolint\" was applied.\n\nSigned-off-by: Sebastiaan van Stijn <github@gone.nl>"}, {"sha": "eec7a76ecde1549f5f3afc865c819f64a1c9b95b", "time": "2022-10-12T09:21:19Z", "changed_files": ["oci/spec_opts_linux.go", "pkg/cri/opts/spec_linux.go", "pkg/cri/sbserver/container_create_linux.go", "pkg/cri/sbserver/container_create_linux_test.go", "pkg/cri/server/container_create_linux.go", "pkg/cri/server/container_create_linux_test.go"], "title": "move WithCDI to pkg/cri/opts\n\nAs WithCDI is CRI-only API it makes sense to move it\nout of oci module.\n\nThis move can also fix possible issues with this API when\nCRI plugin is disabled.\n\nSigned-off-by: Ed Bartosh <eduard.bartosh@intel.com>"}, {"sha": "17a93240359b406c78e5f08a20013f759ea230bf", "time": "2022-10-11T22:02:22Z", "changed_files": ["contrib/seccomp/seccomp_default.go"], "title": "Update the default seccomp to block socket calls to AF_VSOCK\n\nSigned-off-by: Zhuchen Wang <zcwang@google.com>"}, {"sha": "047e684bbb443ab8bfb3a6e35e246deeae1ec584", "time": "2022-10-06T08:10:24Z", "changed_files": ["Vagrantfile", "contrib/Dockerfile.test", "script/setup/install-cni"], "title": "fix install cni script\n\nSigned-off-by: rongfu.leng <rongfu.leng@daocloud.io>"}, {"sha": "63a7d8a7ff291066b0684e8a62ff598684b8056e", "time": "2022-10-04T14:11:15Z", "changed_files": ["remotes/docker/pusher.go", "remotes/docker/pusher_test.go"], "title": "fix pusher concurrent close channel\n\nSigned-off-by: rongfu.leng <rongfu.leng@daocloud.io>"}, {"sha": "39158629f7b7913e14b94409bf205ee8be965254", "time": "2022-10-08T01:17:35Z", "changed_files": ["diff/apply/apply.go"], "title": "diff/apply.readCounter: check negative size\n\n`rc.r.Read()` may return a negative `int` on an error\nwhen the reader is set to a custom content store implementation\n\nSigned-off-by: Akihiro Suda <akihiro.suda.cz@hco.ntt.co.jp>"}, {"sha": "4333e6a6d6471f4058d46928d4f117a814ed3bc8", "time": "2022-09-29T00:59:11Z", "changed_files": ["cmd/containerd-shim/main_unix.go", "runtime/v2/shim/shim.go", "services/server/server.go"], "title": "Swap to net.ErrClosed checks for services\n\nIn Go 1.16 `net.ErrClosed` was exported, removing the need to check the\nexact text of \"use of closed network connection\". The stdlib's net listeners\nare all setup for this to be a reality, but on Windows containerd uses the\nthe go-winio projects named pipe implementation as the listener for services.\nBefore version 0.6.0 this project returned a different error named\n`ErrPipeListenerClosed` for using a closed pipe, where this error was just\nan `errors.New` with the same text as `net.ErrClosed`, so checking against\n`net.ErrClosed` wasn't possible.\n\nStarting in 0.6.0 go-winio has that error assigned to `net.ErrClosed` directly\nso this *should* be alright to finally change.\n\nSigned-off-by: Daniel Canter <dcanter@microsoft.com>"}, {"sha": "acb2964d65f52b7f1d10b1aefe34e4a7535c28e3", "time": "2022-09-26T02:27:38Z", "changed_files": ["go.mod", "go.sum", "integration/client/go.mod", "integration/client/go.sum", "vendor/github.com/Microsoft/go-winio/.gitattributes", "vendor/github.com/Microsoft/go-winio/.gitignore", "vendor/github.com/Microsoft/go-winio/.golangci.yml", "vendor/github.com/Microsoft/go-winio/README.md", "vendor/github.com/Microsoft/go-winio/SECURITY.md"], "title": "go.mod: Bump go-winio to v0.6.0\n\nSome minor improvements, but biggest for here is ErrPipeListenerClosed\nis no longer an errors.New where the string matches the text of the now\nexported net.ErrClosed in the stdlib, but is just assigned to net.ErrClosed\ndirectly. This should allow us to get rid of the string check for \"use of closed\nnetwork connection\" here now..\n\nSigned-off-by: Daniel Canter <dcanter@microsoft.com>"}, {"sha": "396b6d670fcb05dae30ccefd35dc3d357646b08d", "time": "2022-09-24T12:54:10Z", "changed_files": ["snapshots/benchsuite/benchmark_test.go"], "title": "fix missing close\n\nSigned-off-by: xin.li <xin.li@daocloud.io>"}, {"sha": "b92f3160a7156251d921bc85ab3276557210e367", "time": "2022-09-20T01:51:15Z", "changed_files": ["script/test/utils.sh"], "title": "cri-integration: propagate ENABLE_CRI_SANDBOXES\n\nsudo(8) strips environment variables by default.  Explicitly set\nENABLE_CRI_SANDBOXES so we can ensure we test the sbserver CRI\nimplementation.\n\nSigned-off-by: Samuel Karp <samuelkarp@google.com>"}, {"sha": "8f4c23b69f4f21c964cc097a5156e6eb22f1ed67", "time": "2022-05-13T06:34:24Z", "changed_files": ["content/helpers.go", "content/helpers_test.go"], "title": "retry request on writer reset\n\nwhen a put request is retried due to the response from registry,\nthe body of the request should be seekable. A dynamic pipe is added\nto the body so that the content of the body can be read again.\nCurrently a maximum of 5 resets are allowed, above which will fail the\nrequest. A new error ErrReset is introduced which informs that a\nreset has occured and request needs to be retried.\n\nalso added tests for Copy() and push() to test the new functionality\n\nSigned-off-by: Akhil Mohan <makhil@vmware.com>"}, {"sha": "0f743ce4fffc2fad1bdd866c5810dff3d69916af", "time": "2022-09-06T20:46:21Z", "changed_files": ["go.mod", "go.sum", "integration/client/go.mod", "integration/client/go.sum", "vendor/golang.org/x/net/http2/frame.go", "vendor/golang.org/x/net/http2/hpack/encode.go", "vendor/golang.org/x/net/http2/hpack/hpack.go", "vendor/golang.org/x/net/http2/http2.go", "vendor/golang.org/x/net/http2/server.go", "vendor/golang.org/x/net/http2/transport.go", "vendor/modules.txt"], "title": "vendor: golang.org/x/net v0.0.0-20220906165146-f3363e06e74c\n\nUpdate to the latest version that contains a fix for CVE-2022-27664;\nhttps://github.com/golang/net/commit/f3363e06e74cdc304618bf31d898b78590103527\n\nSigned-off-by: Sebastiaan van Stijn <github@gone.nl>"}, {"sha": "5e57d463df54927a9f25056bf259a7eecaa98100", "time": "2022-08-15T14:40:47Z", "changed_files": ["client.go", "container_opts.go"], "title": "feature: use client default namespace\n\nSigned-off-by: rongfu.leng <1275177125@qq.com>"}, {"sha": "9ae2cc3a8ac084b46e48f75d9a758c6d11262a2b", "time": "2022-08-29T08:55:04Z", "changed_files": ["mount/mount_windows.go"], "title": "mount: remove unused ErrNotImplementOnWindows\n\nThis error was added in c5843b761596564ba05f1a7f7b70c2368baf93ab, but no longer\nused since a5a9f91832f9f414a24626173ad5471df3abdb27, which implemented Windows\nsupport.\n\nSigned-off-by: Sebastiaan van Stijn <github@gone.nl>"}, {"sha": "fdff11def3438382f7fb3d94291a009f64c21687", "time": "2022-08-26T07:56:01Z", "changed_files": ["cmd/ctr/commands/run/run_unix.go"], "title": "ctr: add privileged-without-host-devices for run command\n\nFor Kata Containers, starting a privileged container will fail\nif passing all host devices to container due to the permission\nissue, like the `privileged_without_host_devices` for CRI service,\nadd a `privileged-without-host-devices` to `ctr run` command will\ndisable passing all host devices to containers.\n\nSigned-off-by: bin liu <liubin0329@gmail.com>"}, {"sha": "d063597e80080730de4e1ccc76979deda655d897", "time": "2022-08-25T22:15:41Z", "changed_files": ["go.mod", "go.sum", "integration/client/go.mod", "integration/client/go.sum", "vendor/github.com/klauspost/compress/.gitattributes", "vendor/github.com/klauspost/compress/.gitignore", "vendor/github.com/klauspost/compress/.goreleaser.yml"], "title": "Upgrade github.com/klauspost/compress from v1.11.13 to v1.15.9\n\nThe package has multiple improvements and bug fixes.\n\nSigned-off-by: Kazuyoshi Kato <katokazu@amazon.com>"}, {"sha": "f0036cb9dc049f1b003d770d1e6aab8bf153fa10", "time": "2022-05-06T03:41:11Z", "changed_files": ["pkg/cri/config/config_windows.go"], "title": "windows: Add runhcs-wcow-hypervisor runtimeclass to the default config\n\nAs part of the effort of getting hypervisor isolated windows container\nsupport working for the CRI entrypoint here, add the runhcs-wcow-hypervisor\nhandler for the default config. This sets the correct SandboxIsolation\nvalue that the Windows shim uses to differentiate process vs. hypervisor\nisolation. This change additionally sets the wcow-process runtime to\npassthrough io.microsoft.container* annotations and the hypervisor runtime\nto accept io.microsoft.virtualmachine* annotations.\n\nNote that for K8s users this runtime handler will need to be configured by\ncreating the corresponding RuntimeClass resources on the cluster as it's\nnot the default runtime.\n\nSigned-off-by: Daniel Canter <dcanter@microsoft.com>"}, {"sha": "1f8db2467be53d88fbae6e2335a269b6b515a20d", "time": "2022-08-13T06:43:27Z", "changed_files": ["go.mod", "go.sum", "integration/client/go.mod", "integration/client/go.sum", "vendor/github.com/Microsoft/hcsshim/.gitattributes", "vendor/github.com/Microsoft/hcsshim/.gitignore", "vendor/github.com/Microsoft/hcsshim/.golangci.yml", "vendor/github.com/Microsoft/hcsshim/Makefile", "vendor/github.com/Microsoft/hcsshim/Protobuild.toml", "vendor/github.com/Microsoft/hcsshim/README.md", "vendor/github.com/Microsoft/hcsshim/SECURITY.md"], "title": "go.mod: Bump hcsshim to v0.10.0-rc.1\n\nThis contains quite a bit (also bumps google/uuid to 1.3.0). Some HostProcess\ncontainer improvements to get ready for whenever it goes to stable in\nKubernetes, Hyper-V (windows) container support for CRI, and a plethora of\nother small additions and fixes.\n\nSigned-off-by: Daniel Canter <dcanter@microsoft.com>"}, {"sha": "782fd3c8e6122befa321d88da6e90a98b9868a41", "time": "2022-08-07T04:36:17Z", "changed_files": ["Vagrantfile"], "title": "Vagrantfile: dump containerd log after critest\n\nIt is used to debug if there is any flaky test cases.\n\nSigned-off-by: Wei Fu <fuweid89@gmail.com>"}, {"sha": "426fcfbc5281b0f1912584f086f9de04682c583a", "time": "2022-07-30T20:01:43Z", "changed_files": ["script/setup/install-protobuf"], "title": "fix protobuf aarch64\n\nSigned-off-by: fahed dorgaa <fahed.dorgaa@gmail.com>"}, {"sha": "f5fb2c32d2de97e4fd023b589be3641b46c36ec7", "time": "2022-07-28T16:59:30Z", "changed_files": ["api/events/container.pb.go", "api/events/content.pb.go", "api/events/image.pb.go", "api/events/namespace.pb.go", "api/events/snapshot.pb.go", "api/events/task.pb.go", "api/runtime/sandbox/v1/sandbox.pb.go", "api/runtime/task/v2/shim.pb.go", "api/services/containers/v1/containers.pb.go", "api/services/content/v1/content.pb.go", "api/services/diff/v1/diff.pb.go", "api/services/events/v1/events.pb.go", "api/services/images/v1/images.pb.go", "api/services/introspection/v1/introspection.pb.go", "api/services/leases/v1/leases.pb.go", "api/services/namespaces/v1/namespace.pb.go", "api/services/sandbox/v1/sandbox.pb.go", "api/services/snapshots/v1/snapshots.pb.go", "api/services/tasks/v1/tasks.pb.go", "api/services/ttrpc/events/v1/events.pb.go", "api/services/version/v1/version.pb.go", "api/types/descriptor.pb.go", "api/types/metrics.pb.go", "api/types/mount.pb.go", "api/types/platform.pb.go", "api/types/sandbox.pb.go", "api/types/task/task.pb.go", "pkg/runtimeoptions/v1/api.pb.go", "protobuf/plugin/fieldpath.pb.go", "runtime/linux/runctypes/runc.pb.go", "runtime/v1/shim/v1/shim.pb.go", "runtime/v2/runc/options/oci.pb.go"], "title": "Regenerate protos with updated protoc-gen-go\n\nThis fixes CI issues\n\nSigned-off-by: Brian Goff <cpuguy83@gmail.com>"}, {"sha": "b16c3e9adf6f306cf15c7d5286f4c8e0e8656bd9", "time": "2022-07-27T22:34:45Z", "changed_files": ["integration/windows_hostprocess_test.go"], "title": "Windows HostProcess container CRI stats test\n\nAdd a test to the CRI suite to validate stats functions for hostprocess\ncontainers. hcsshim v0.9.3 had a bug in stats collection so this is\nmainly for sanity and to avoid another regression.\n\nSigned-off-by: Daniel Canter <dcanter@microsoft.com>"}, {"sha": "2fa84b1b8d7fdc112ecfcbead68734437d89f347", "time": "2022-07-27T11:22:37Z", "changed_files": ["remotes/docker/pusher.go"], "title": "Add extra context to error when push unauthorized\n\nFor consistency with pulls, see #2052.\n\nSigned-off-by: Jonny Stoten <jonny.stoten@docker.com>"}, {"sha": "276a6f133a90cb60ac63046353cd849cbe9e33d6", "time": "2022-07-19T09:49:49Z", "changed_files": ["snapshots/testsuite/helpers.go"], "title": "test: error strings should not be capitalized\n\nSigned-off-by: jianfei.zhang <jianfei.zhang@daocloud.io>"}, {"sha": "14003683f0fbd37cb759ef76210f83e6bc968862", "time": "2022-07-25T20:09:25Z", "changed_files": ["go.mod", "go.sum", "integration/client/go.mod", "integration/client/go.sum", "vendor/github.com/Microsoft/hcsshim/internal/jobobject/iocp.go", "vendor/github.com/Microsoft/hcsshim/internal/jobobject/jobobject.go", "vendor/github.com/Microsoft/hcsshim/internal/jobobject/limits.go", "vendor/github.com/Microsoft/hcsshim/internal/queue/mq.go", "vendor/github.com/Microsoft/hcsshim/internal/winapi/jobobject.go", "vendor/github.com/Microsoft/hcsshim/internal/winapi/process.go", "vendor/github.com/Microsoft/hcsshim/internal/winapi/system.go", "vendor/github.com/Microsoft/hcsshim/internal/winapi/zsyscall_windows.go", "vendor/modules.txt"], "title": "go.mod: Bump hcsshim to v0.9.4\n\nThis tag contains some fixes for hostprocess containers, mainly around\nfixing task stats which regressed from a change in v0.9.3.\n\nhttps://github.com/microsoft/hcsshim/releases/tag/v0.9.4\n\nSigned-off-by: Daniel Canter <dcanter@microsoft.com>"}, {"sha": "c15d8e15607a269b00aef2ee56d30f8e50309ae6", "time": "2022-07-25T20:02:30Z", "changed_files": ["go.mod", "go.sum", "integration/client/go.mod", "integration/client/go.sum", "vendor/github.com/Microsoft/hcsshim/internal/hcs/system.go", "vendor/github.com/Microsoft/hcsshim/internal/hns/hnspolicy.go"], "title": "go.mod: Bump hcsshim to 0.9.3\n\nThis tag brings in a new field to fix an HNS issue in ws2019 as well as\nan optimization for collecting Windows stats (memory, cpu, iops).\n\nSigned-off-by: Daniel Canter <dcanter@microsoft.com>"}, {"sha": "344431cdd48ec19b73fdc5d36f056eb7bee5154b", "time": "2022-07-23T15:57:53Z", "changed_files": ["rootfs/diff.go"], "title": "fix: support simultaneous create diff for same parent snapshot\n\nSigned-off-by: Qian Zhang <cosmoer@qq.com>"}, {"sha": "b297775eafd81e4036845652a722dbfbfb054fae", "time": "2022-06-18T09:06:47Z", "changed_files": ["runtime/v2/shim/shim.go"], "title": "runtime/v2/shim: return if error in load plugin\n\nIf there is any unskipable error during setuping shim plugins, we should\nfail return error to prevent from leaky shim instance. For example,\nthere is error during init task plugin, the shim ttrpc server will not\ncontain any shim API method. The any call to the shim will receive that\n\n  failed to create shim task: service containerd.task.v2.Task: not implemented\n\nThen containerd can't use `Shutdown` to let the shim close. The shim\nwill be leaky. And also fail return if there is no ttrpc service.\n\nSigned-off-by: Wei Fu <fuweid89@gmail.com>"}, {"sha": "5f9b318e506b9ebf16fa5caf7a63b47b9ad0b0e5", "time": "2022-06-18T08:15:43Z", "changed_files": ["Makefile", "cmd/ctr/commands/commands.go", "cmd/ctr/commands/run/run_unix.go", "integration/failpoint/cmd/containerd-shim-runc-fp-v1/main.go", "integration/failpoint/cmd/containerd-shim-runc-fp-v1/plugin.go"], "title": "bin/ctr,integration: new runc-shim with failpoint\n\nAdded new runc shim binary in integration testing.\n\nThe shim is named by io.containerd.runc-fp.v1, which allows us to use\nadditional OCI annotation `io.containerd.runtime.v2.shim.failpoint.*` to\nsetup shim task API's failpoint. Since the shim can be shared with\nmultiple container, like what kubernetes pod does, the failpoint will be\ninitialized during setup the shim server. So, the following the\ncontainer's OCI failpoint's annotation will not work.\n\nThis commit also updates the ctr tool that we can use `--annotation` to\nspecify annotations when run container. For example:\n\n```bash\n\u279c  ctr run -d --runtime runc-fp.v1 \\\n     --annotation \"io.containerd.runtime.v2.shim.failpoint.Kill=1*error(sorry)\" \\\n     docker.io/library/alpine:latest testing sleep 1d\n\n\u279c  ctr t ls\nTASK       PID       STATUS\ntesting    147304    RUNNING\n\n\u279c  ctr t kill -s SIGKILL testing\nctr: sorry: unknown\n\n\u279c  ctr t kill -s SIGKILL testing\n\n\u279c  sudo ctr t ls\nTASK       PID       STATUS\ntesting    147304    STOPPED\n```\n\nThe runc-fp.v1 shim is based on core runc.v2. We can use it to inject\nfailpoint during testing complicated or big transcation API, like\nkubernetes PodRunPodsandbox.\n\nSigned-off-by: Wei Fu <fuweid89@gmail.com>"}, {"sha": "19e8479837e16630685780de75ea3486f0dc777a", "time": "2022-07-13T21:03:35Z", "changed_files": ["contrib/seccomp/seccomp_default.go"], "title": "seccomp: seccomp: add syscalls related to PKU in default policy\n\nAdd pkey_alloc(2), pkey_free(2) and pkey_mprotect(2) in seccomp default profile.\npkey_alloc(2), pkey_free(2) and pkey_mprotect(2) can only configure\nthe calling process's own memory, so they are existing \"safe for everyone\" syscalls.\n\nSigned-off-by: Sebastiaan van Stijn <github@gone.nl>"}, {"sha": "c733119db79ed592eb29e8f9cfc510082b6ba0fb", "time": "2022-07-13T09:37:28Z", "changed_files": ["docs/cri/config.md"], "title": "cri doc: fix formatting for CDI options\n\nSigned-off-by: Ed Bartosh <eduard.bartosh@intel.com>"}, {"sha": "bcdc8468f882fb3011e6ecc9fe2de6c90ee07af8", "time": "2022-07-11T20:53:11Z", "changed_files": ["pkg/cri/server/helpers.go", "pkg/cri/store/container/container.go", "pkg/cri/store/image/image.go", "pkg/cri/store/sandbox/sandbox.go", "pkg/cri/store/snapshot/snapshot.go"], "title": "Fix out of date comments for CRI store packages\n\nAll of the CRI store related packages all use the standard errdefs\nerrors now for if a key doesn't or already exists (ErrAlreadyExists,\nErrNotFound), but the comments for the methods still referenced\nsome unused package specific error definitions. This change just\nupdates the comments to reflect what errors are actually returned\nand adds comments for some previously undocumented exported functions.\n\nSigned-off-by: Daniel Canter <dcanter@microsoft.com>"}, {"sha": "6d4b61007bddd46d2cdcfaad4ad5f57484f31c1c", "time": "2022-07-05T06:01:12Z", "changed_files": ["integration/client/export_test.go"], "title": "integration/client: fix typo in export_test.go\n\nSeet -> Seek\nbegining -> beginning\n\nSigned-off-by: Ikko Ashimine <eltociear@gmail.com>"}, {"sha": "b8bb33b92d80dbd6444b052b4dca6340999a55b7", "time": "2022-04-24T10:53:04Z", "changed_files": ["cmd/ctr/commands/content/content.go"], "title": "fix can't edit object by using ctr content edit command\n\nSigned-off-by: zhang he <zhanghe9702@163.com>"}, {"sha": "d2588b3fa423851ce20cf19b760837bf37f5f2d9", "time": "2022-06-29T00:19:04Z", "changed_files": ["diff/lcow/lcow.go"], "title": "LCOW differ return ErrNotImplemented for wrong mount type\n\nOn Windows the two differs we register by default are the \"windows\" and\n\"windows-lcow\" differs. The diff service checks if Apply returns\nErrNotImplemented and will move on to the next differ in the line.\nThe Windows differ makes use of this to fallback to LCOW if it's\ndetermined the mount type passed is incorrect, but the LCOW differ\ndoes not return ErrNotImplemented for the same scenario. This puts\na strict ordering requirement on the default differ entries in the config,\nnamely that [\"windows\", \"windows-lcow\"] will work, as windows will correctly\nfall back to the lcow differ, but [\"windows-lcow\", \"windows\"] won't as\nthe diff services Apply will just return the error directly.\n\nSigned-off-by: Daniel Canter <dcanter@microsoft.com>"}, {"sha": "4f0ea7831bc32718bcdc64cf7781d1410ba6f0e3", "time": "2022-06-22T14:56:11Z", "changed_files": ["docs/snapshotters/devmapper.md"], "title": "fix: missing sudo for devmapper doc\n\nSigned-off-by: Ye Sijun <junnplus@gmail.com>"}, {"sha": "0b3c31dd7c75186ad53f22ff0ccc6738412097ab", "time": "2022-06-15T09:04:27Z", "changed_files": ["script/setup/prepare_env_windows.ps1"], "title": "Downgrade MinGW in Windows setup scripts.\n\nAfter the switch to MinGW 11.2.0 in #6888, the containerd client\nintegration tests were crashing with an apparent  memory allocation\nerror as described in golang/go#46099.\n\nThis patch reverts MinGW to 10.3.0 to bypass the issue.\n\nSigned-off-by: Nashwan Azhari <nazhari@cloudbasesolutions.com>"}, {"sha": "42a386c8164bef16d59590c61ab00806f854d8fd", "time": "2022-05-09T17:11:23Z", "changed_files": ["pkg/cri/server/sandbox_run_linux.go"], "title": "CRI: change the /dev/shm mount options in Sandbox.\n\nAll containers except the pause container, mount `/dev/shm\" with flags\n`nosuid,nodev,noexec`. So change mount options for pause container to\nkeep consistence.\nThis also helps to solve issues of failing to mount `/dev/shm` when\npod/container level user namespace is enabled.\n\nFixes: #6911\n\nSigned-off-by: Jiang Liu <gerry@linux.alibaba.com>\nSigned-off-by: Lei Wang <wllenyj@linux.alibaba.com>"}, {"sha": "a62a95789c14cc09727bd18a3ceb987b9f438868", "time": "2022-05-09T17:09:32Z", "changed_files": ["pkg/cri/server/sandbox_run_linux.go"], "title": "CRI: remove default /dev/shm mount in Sandbox.\n\nThis's an optimization to get rid of redundant `/dev/shm\" mounts for pause container.\nIn `oci.defaultMounts`, there is a default `/dev/shm` mount which is redundant for\npause container.\n\nFixes: #6911\n\nSigned-off-by: Jiang Liu <gerry@linux.alibaba.com>\nSigned-off-by: Lei Wang  <wllenyj@linux.alibaba.com>"}, {"sha": "5560b622d6e952213380eec7936af6a580d0c17b", "time": "2022-06-09T21:31:21Z", "changed_files": ["archive/tar_test.go"], "title": "archive: Explicitly specify stdio for tar(1)\n\nDifferent tar(1) implementations default to different input and output\nlocations when none is specified.  This can include tape devices like\n/dev/st0 (on Linux) or /dev/sa0 (on FreeBSD), but may be overridden by\ncompilation options or environment variables.  Using the f option with\nthe special value of - instructs tar(1) to read from stdin and write to\nstdout instead of the default.\n\nSigned-off-by: Samuel Karp <me@samuelkarp.com>"}, {"sha": "ad8e5980606c5e4bc1bc1a140ddc24f2a626969c", "time": "2022-06-09T05:33:23Z", "changed_files": ["oci/mounts_freebsd.go"], "title": "oci: Remove empty mount option slice for FreeBSD\n\nMount options are marked `json:omitempty`. An empty slice in the default\nobject caused TestWithSpecFromFile to fail.\n\nSigned-off-by: Samuel Karp <me@samuelkarp.com>"}, {"sha": "0167e55abddbccdf1b5500297dea390cd2d99d79", "time": "2022-06-09T05:29:43Z", "changed_files": ["script/setup/runc-version"], "title": "update runc binary to v1.1.3\n\nfull diff: https://github.com/opencontainers/runc/compare/v1.1.2...v1.1.3\n\nThis is the third release of the 1.1.z series of runc, and contains\nvarious minor improvements and bugfixes.\n\n- Our seccomp `-ENOSYS` stub now correctly handles multiplexed syscalls on\n  s390 and s390x. This solves the issue where syscalls the host kernel did not\n  support would return `-EPERM` despite the existence of the `-ENOSYS` stub\n  code (this was due to how s390x does syscall multiplexing).\n- Retry on dbus disconnect logic in libcontainer/cgroups/systemd now works as\n  intended; this fix does not affect runc binary itself but is important for\n  libcontainer users such as Kubernetes.\n- Inability to compile with recent clang due to an issue with duplicate\n  constants in libseccomp-golang.\n- When using systemd cgroup driver, skip adding device paths that don't exist,\n  to stop systemd from emitting warnings about those paths.\n- Socket activation was failing when more than 3 sockets were used.\n- Various CI fixes.\n- Allow to bind mount `/proc/sys/kernel/ns_last_pid` to inside container.\n- runc static binaries are now linked against libseccomp v2.5.4.\n\nSigned-off-by: Sebastiaan van Stijn <github@gone.nl>"}, {"sha": "fa4720fa16b0609c94f776a480bab496f2e3b3fe", "time": "2022-05-27T10:30:41Z", "changed_files": ["snapshots/overlay/overlayutils/check.go"], "title": "fix add ro mount for userattr-unmount unexpected timeout\n\nSigned-off-by: Xinlin Ma <forblue.lin@gmail.com>"}, {"sha": "92d360b58a2b30de6fea1825d172a89df04be79f", "time": "2022-06-07T21:05:47Z", "changed_files": ["snapshots/overlay/overlay.go"], "title": "fix minor spelling mistake: lablel -> label\n\nSigned-off-by: Swagat Bora <sbora@amazon.com>"}, {"sha": "6190b0f04be8c99d8f02e13e035f7d964195e491", "time": "2022-06-07T09:55:15Z", "changed_files": ["pkg/cri/server/sandbox_run.go"], "title": "Correct spelling mistake (\"sanbdox\" to \"sandbox\")\n\nSigned-off-by: Shane Jennings <superzinbo@gmail.com>"}, {"sha": "7b9f1d40587343b32b478e0756e9bfbd3c684f4a", "time": "2022-05-05T23:40:56Z", "changed_files": ["docs/cri/config.md", "pkg/cri/annotations/annotations.go", "pkg/cri/config/config.go", "pkg/cri/server/container_create.go", "pkg/cri/server/container_create_test.go", "pkg/cri/server/image_pull.go", "pkg/cri/server/image_pull_test.go", "pkg/cri/server/sandbox_run.go"], "title": "Added support for runtime level snapshotter, issue 6657\n\nSigned-off-by: shuaichang <shuai.chang@databricks.com>\n\nUpdated annotation name"}, {"sha": "e3b4d750db19dcfa6578c7063a8e2883e7de7894", "time": "2022-06-01T17:51:30Z", "changed_files": ["go.mod", "go.sum", "integration/client/go.sum", "pkg/cri/server/testing/fake_cni_plugin.go", "vendor/github.com/containerd/go-cni/Makefile", "vendor/github.com/containerd/go-cni/cni.go", "vendor/github.com/containernetworking/cni/pkg/invoke/exec.go", "vendor/modules.txt"], "title": "update go-cni/for cni update fixing plugins that don't respond with version\n\nSigned-off-by: Mike Brown <brownwm@us.ibm.com>"}, {"sha": "b572a82ad8b2daec351b5f2ee909b1a2102b9cf4", "time": "2022-05-28T20:53:28Z", "changed_files": ["pkg/cri/store/errors.go", "pkg/cri/store/errors_test.go", "pkg/cri/store/image/image.go"], "title": "CRI: Remove deprecated error types and update error msg\n\nSigned-off-by: Maksym Pavlenko <pavlenko.maksym@gmail.com>"}, {"sha": "978ff393d2544f729284cd2dfb70e497c4038a7c", "time": "2022-05-27T06:34:41Z", "changed_files": ["integration/main_test.go", "integration/windows_hostprocess_test.go", "pkg/cri/server/container_create_windows.go", "pkg/cri/server/container_create_windows_test.go"], "title": "Add validations for Windows HostProcess CRI configs\n\nHostProcess containers require every container in the pod to be a\nhost process container and have the corresponding field set. The Kubelet\nusually enforces this so we'd error before even getting here but we recently\nfound a bug in this logic so better to be safe than sorry.\n\nSigned-off-by: Daniel Canter <dcanter@microsoft.com>"}, {"sha": "a3a2d14ecc5b0e50efa15c67cfa46e0cb917b02d", "time": "2022-05-27T10:57:12Z", "changed_files": ["script/verify-go-modules.sh"], "title": "fix verify-vendor if go.mod does not contain replace rules\n\nBefore this patch, if the go.mod did not contain a replace rule, jq would fail\n(Cannot iterate over null), and Bash would produce an error when trying to add\nan empty `$key` to `map_requires`:\n\n    make verify-vendor\n    + verify-vendor\n      jq: error (at <stdin>:581): Cannot iterate over null (null)\n      /go/src/github.com/containerd/containerd//script/verify-go-modules.sh: line 44: map_replaces_1[$key]: bad array subscript\n      make: *** [Makefile:435: verify-vendor] Error 1\n\nSigned-off-by: Sebastiaan van Stijn <github@gone.nl>"}, {"sha": "d2f30150b36e999f8f63adb78262e08d8304cfbe", "time": "2022-05-24T08:54:33Z", "changed_files": ["archive/tar.go"], "title": "archive: add human-readable hint to Lchown error\n\nBefore:\n```\n$ nerdctl pull gcr.io/kubeflow-images-public/tensorflow-1.14.0-notebook-cpu:v0.7.0\nFATA[0026] failed to extract layer sha256:f8a604834d388fd3d04c26e4ed832b36b617ea8a4e0b1665b9199bd10cfcb171: mount callback failed on /var/lib/containerd/tmpmounts/containerd-mount1818823128:\nlchown /var/lib/containerd/tmpmounts/containerd-mount1818823128/usr/local/bin/docker-credential-gcr: invalid argument: unknown\n```\n\nAfter:\n```\n$ nerdctl pull gcr.io/kubeflow-images-public/tensorflow-1.14.0-notebook-cpu:v0.7.0\nFATA[0027] failed to extract layer sha256:f8a604834d388fd3d04c26e4ed832b36b617ea8a4e0b1665b9199bd10cfcb171: mount callback failed on /var/lib/containerd/tmpmounts/containerd-mount3521205359:\nfailed to Lchown \"/var/lib/containerd/tmpmounts/containerd-mount3521205359/usr/local/bin/docker-credential-gcr\" for UID 205001, GID 5000:\nlchown /var/lib/containerd/tmpmounts/containerd-mount3521205359/usr/local/bin/docker-credential-gcr: invalid argument\n(Hint: try increasing the number of subordinate IDs in /etc/subuid and /etc/subgid): unknown\n```\n\nRelated to moby/moby issue 43576 but for containerd\n\nSigned-off-by: Akihiro Suda <akihiro.suda.cz@hco.ntt.co.jp>"}, {"sha": "9f9ebbd99103bb60b0b0b45be8d9520b8c047b44", "time": "2022-05-23T16:05:36Z", "changed_files": ["snapshots/overlay/overlay.go"], "title": "Fix tx closed error when upperdirlabel specified\n\nWhen upperdirLabel specified, overlay Update will throw tx closed error since Commit is invoked before GetInfo\n\nSigned-off-by: cardy.tang <zuniorone@gmail.com>"}, {"sha": "739cb4c99a8add27ae4ca10e0c26b1b61e8b1183", "time": "2022-05-23T01:10:07Z", "changed_files": ["services/server/config/config.go"], "title": "config: improve config v1 deprecation message\n\nThe previous wording was causing confusion.\nFix moby/moby issue 43628\n\nSigned-off-by: Akihiro Suda <akihiro.suda.cz@hco.ntt.co.jp>"}, {"sha": "8d95f2b59978fce331b703203a640fb034add5e0", "time": "2022-05-19T14:52:51Z", "changed_files": ["metadata/buckets.go"], "title": "fix comments on metadata schema\n\nSigned-off-by: Iceber Gu <wei.cai-nat@daocloud.io>"}, {"sha": "92b7bc9edcb429ba2c242b7d70b73c6b188581ae", "time": "2022-05-18T08:11:30Z", "changed_files": ["cmd/ctr/commands/run/run_unix.go"], "title": "ctr: fix label args used in NewContainer\n\nSigned-off-by: Iceber Gu <wei.cai-nat@daocloud.io>"}, {"sha": "eaec6530d7fa39504850bab4458073603b8a3e67", "time": "2022-05-17T15:53:36Z", "changed_files": ["pkg/cri/config/config.go", "pkg/cri/server/restart.go", "services/introspection/introspection.go"], "title": "fix some confusing typos\n\nSigned-off-by: AllenZMC <zhongming.chang@daocloud.io>"}, {"sha": "7300296cb61c3efc8ad2461a0fedc9c80ac7da90", "time": "2022-05-12T15:06:15Z", "changed_files": ["Vagrantfile", "script/setup/critools-version", "script/setup/install-critools"], "title": "reverts removal of parallel run from critest\n\nSigned-off-by: Paul S. Schweigert <paulschw@us.ibm.com>\n\nAs discussed in https://github.com/containerd/containerd/issues/6903,\nrunning ginkgo tests in parallel while trying to skip wasn't working.\nHowever, now that\nhttps://github.com/kubernetes-sigs/cri-tools/pull/930 has fixed the\nissue upstream, we can revert back to running our tests in parallel\nwith the skip."}, {"sha": "523d069a25d07a33f83a5a5c6924fc5560f4193f", "time": "2022-05-12T13:03:27Z", "changed_files": ["go.mod", "metadata/sandbox.go", "sandbox.go"], "title": "sandbox: replace github.com/pkg/errors with native errors\n\nPR #6366 implemented a tree-wide change to replace github.com/pkg/errors\nto errors. The new sandbox API PR #6703 had few errors.Wrap*() leftovers\nand pulled github.com/pkg/errors back. This commit replaces those\nleftovers by following the pattern in #6366.\n\nSigned-off-by: Mikko Ylinen <mikko.ylinen@intel.com>"}, {"sha": "25858d621fc200b8ce7f2cfa0f1b2e4147102fc9", "time": "2022-05-12T11:38:47Z", "changed_files": ["script/setup/runc-version"], "title": "update runc binary to v1.1.2\n\nThis is the second patch release of the runc 1.1 release branch. It\nfixes CVE-2022-29162, a minor security issue (which appears to not be\nexploitable) related to process capabilities.\n\nThis is a similar bug to the ones found and fixed in Docker and\ncontainerd recently (CVE-2022-24769).\n\n- A bug was found in runc where runc exec --cap executed processes with\n  non-empty inheritable Linux process capabilities, creating an atypical Linux\n  environment. For more information, see GHSA-f3fp-gc8g-vw66 and CVE-2022-29162.\n- runc spec no longer sets any inheritable capabilities in the created\n  example OCI spec (config.json) file.\n\nSigned-off-by: Sebastiaan van Stijn <github@gone.nl>"}, {"sha": "f710505f4a2760424258a4d517bc261d5bbfce1c", "time": "2022-05-08T17:00:40Z", "changed_files": ["runtime/v2/runc/manager/manager_linux.go", "runtime/v2/shim/shim.go"], "title": "shim: fix debug flag not working\n\nAs we know, shim starts twice. The first time we execute the shim with the\n`start` arguments, the `-debug` argument is passed to the shim\nprocess correctly. But the second time we execute shim, the debug flag\nis ignored.\n\nSigned-off-by: wllenyj <wllenyj@linux.alibaba.com>"}, {"sha": "ad8b87ba234e0a4993fe84983ff4e45a3e47a58f", "time": "2022-05-09T21:15:00Z", "changed_files": ["diff/stream_unix.go", "diff/stream_windows.go"], "title": "Add `Wait` to `binaryProcessor`\n\nAdd exported `Wait(ctx context.Context) error` interface that waits on\nthe underlying command (or context cancellation) and returns the error.\n\nThis fixes a race condition between `.wait()` and `.Err error`:\nhttps://github.com/containerd/containerd/issues/6914\n\nSigned-off-by: Hamza El-Saawy <hamzaelsaawy@microsoft.com>"}, {"sha": "d9fc5f4b008e4966d07441409b662840b4f0bdb9", "time": "2022-05-09T19:42:33Z", "changed_files": ["Vagrantfile"], "title": "Enable git commands due to git CVE fix\n\nAdd /vagrant to \"safe directory\" global git config so Vagrant runs work\nproperly again.\n\nSigned-off-by: Phil Estes <estesp@amazon.com>"}, {"sha": "2c98a7b099b00316c0331a91927e54f85d4ec187", "time": "2022-05-06T22:26:21Z", "changed_files": ["cmd/ctr/commands/images/import.go"], "title": "ctr import: strictly match platform\n\nCurrently, ctr import will use loose matching as defined by\nplatforms.Only(), meaning in the case of platform linux/amd64 as in\nissue#6441, importing will also match linux/386 platform on the\nimage-to-be-imported's index. However, that image-to-be-imported may not\nhave both the linux/amd64 and linux/386 platform contents, resulting in\na failure to unpack the image. This change makes that check strict such\nthat the requested platform to import for is the only platform content\nimported. Both ctr pull and ctr export will treat the platform option as\nstrict, so this change makes ctr import consistent with those.\n\nresolves #6441\n\nSigned-off-by: Gavin Inglis <giinglis@amazon.com>"}, {"sha": "c721c8e2742bcdf22b37d9dd865d4e654e3719cf", "time": "2022-05-06T18:07:39Z", "changed_files": ["docs/snapshotters/devmapper.md", "snapshots/devmapper/metadata.go"], "title": "devmapper docs: small fixes\n\nSigned-off-by: Gavin Inglis <giinglis@amazon.com>"}, {"sha": "57d2bce7497f2d645667d488fe50e71403d9311b", "time": "2022-05-02T15:36:22Z", "changed_files": ["snapshots/snapshotter.go"], "title": "docs: minor fixes in snapshots.Snapshotter comments\n\nSigned-off-by: Austin Vazquez <austin.vazquez.dev@gmail.com>"}, {"sha": "42584167b765180c83a3d4456882ce8237e27dad", "time": "2022-05-02T09:07:08Z", "changed_files": ["RELEASES.md", "client.go", "client_opts.go", "cmd/ctr/commands/content/fetch.go", "pkg/cri/server/image_pull.go", "pull.go", "remotes/docker/resolver.go", "remotes/docker/schema1/converter.go"], "title": "Officially deprecate Schema 1\n\nSchema 1 has been substantially deprecated since circa. 2017 in favor of Schema 2 introduced in Docker 1.10 (Feb 2016)\nand its successor OCI Image Spec v1, but we have not officially deprecated Schema 1.\n\nOne of the reasons was that Quay did not support Schema 2 so far, but it is reported that Quay has been\nsupporting Schema 2 since Feb 2020 (moby/buildkit issue 409).\n\nThis PR deprecates pulling Schema 1 images but the feature will not be removed before containerd 2.0.\nPushing Schema 1 images was never implemented in containerd (and its consumers such as BuildKit).\n\nDocker/Moby already disabled pushing Schema 1 images in Docker 20.10 (moby/moby PR 41295),\nbut Docker/Moby has not yet disabled pulling Schema 1 as containerd has not yet deprecated Schema 1.\n(See the comments in moby/moby PR 42300.)\nDocker/Moby is expected to disable pulling Schema 1 images in future after this deprecation.\n\nSigned-off-by: Akihiro Suda <akihiro.suda.cz@hco.ntt.co.jp>"}, {"sha": "46773c341796748a7057e4f03826e738bc6778ec", "time": "2022-04-27T18:43:23Z", "changed_files": ["runtime/v2/manager.go", "runtime/v2/shim_load.go"], "title": "Cleanup leaked shim process\n\nIf containerd crashes while creating a container the shim process stays alive and is never\ncleaned up. Details are discussed in issue containerd/containerd#6860. This fixes the code\nto cleanup such shim processes on containerd restart.\n\nSigned-off-by: Amit Barve <ambarve@microsoft.com>"}, {"sha": "0e6c7bf9311b3bf8c8ea7498060d020dc56f6a2d", "time": "2022-04-25T22:18:58Z", "changed_files": ["pkg/cri/config/config.go"], "title": "Fix undefined error in use of errors package\n\nSigned-off-by: Derek McGowan <derek@mcg.dev>"}, {"sha": "da3e2f985a9afe4f97657f3ee973fc809413e776", "time": "2022-04-24T05:45:42Z", "changed_files": ["images/image.go"], "title": "fix incorrect syntax in comments\n\nSigned-off-by: xin.li <xin.li@daocloud.io>\n\nSigned-off-by: xin.li <xin.li@daocloud.io>\n\nSigned-off-by: xin.li <xin.li@daocloud.io>"}, {"sha": "35994a475c374f2da53ad6c127d7078092e58e64", "time": "2022-04-20T10:03:43Z", "changed_files": ["runtime/restart/monitor/monitor.go"], "title": "fix monitor restart\n\nSigned-off-by: Ye Sijun <junnplus@gmail.com>"}, {"sha": "22cd13b3702753b4b28a731a7d8a5c4794307a16", "time": "2022-04-20T05:47:09Z", "changed_files": ["runtime/restart/monitor/monitor.go"], "title": "fix nil pointer panic for monitor\n\nSigned-off-by: Ye Sijun <junnplus@gmail.com>"}, {"sha": "39692e7672ac0ca14e6845ae533ceaa5eaa45921", "time": "2022-04-19T21:40:59Z", "changed_files": ["pkg/unpack/unpacker.go"], "title": "unpack: return error when no platforms defined\n\nRequire platforms to be non-empty to avoid no-op unpack\n\nSigned-off-by: Derek McGowan <derek@mcg.dev>"}, {"sha": "80b825ca2ce0f4e9c1618303cbbc043448fe9515", "time": "2022-04-18T22:12:15Z", "changed_files": ["api/events/task.pb.go", "api/events/task.proto"], "title": "Remove gogoproto.stdtime\n\nThis commit removes gogoproto.stdtime, since it is not supported by\nGoogle's official toolchain\n(see https://github.com/containerd/containerd/issues/6564).\n\nSigned-off-by: Kazuyoshi Kato <katokazu@amazon.com>"}, {"sha": "94faa70df4d78538605bb492010954a7e3bec67a", "time": "2022-04-14T22:32:24Z", "changed_files": ["contrib/seccomp/kernelversion/kernel_linux.go", "contrib/seccomp/kernelversion/kernel_linux_test.go", "contrib/seccomp/seccomp_default.go"], "title": "allow ptrace(2) by default for kernel >= 4.8\n\nSigned-off-by: Henry Wang <henwang@amazon.com>"}, {"sha": "942af120327d2f4dcb115dfe62202d937094d1a2", "time": "2022-04-14T00:55:29Z", "changed_files": ["snapshots/devmapper/pool_device_test.go"], "title": "fix pool_device_test.go\n\nWhile executing mke2fs, 'Not enough space to build proposed filesystem while setting up superblock' error is happend on Ubuntu20.04\n\nSigned-off-by: Shinichi Morimoto <shnmorimoto@gmail.com>"}, {"sha": "8a1280b2b604f4eff856b8ac6d0d717f2ccc0550", "time": "2022-04-07T16:00:07Z", "changed_files": ["Vagrantfile", "metrics/cgroups/common/type.go", "metrics/cgroups/metrics_test.go", "metrics/cgroups/v1/metrics.go"], "title": "metrics/cgroups: fix deadlock issue in Add during Collect\n\nThe Collector.Collect will be the field ns'Collect's callback, which be\ninvoked periodically with internal lock. And Collector.Add also runs\nwith ns.Lock in Collector.Lock, which is easy to cause deadlock.\n\nGoroutine X:\n\n\tns.Collect\n\t  ns.Lock\n\t    Collector.Collect\n\t      Collector.RLock\n\nGoroutine Y:\n\n\tCollector.Add\n\t  Collector.Lock\n\t    ns.Lock\n\nWe should use ns.Lock without Collector.Lock in Add.\n\nFix: #6772\n\nSigned-off-by: Wei Fu <fuweid89@gmail.com>"}, {"sha": "927b34e41e2ed0050dbeccbc7c3dffaeb2969949", "time": "2022-04-07T23:51:14Z", "changed_files": ["tracing/plugin/otlp.go"], "title": "tracing: fix panic on startup when configured\n\nWhen support for http/protobuf was added, the OTLP tracing processor\nplugin was mistakenly changed to return a raw OTLP exporter instance.\nConsequently, the type-assertion to a trace.SpanProcessor inside the\ntracing pluigin would panic if the processor plugin was configured.\nModify the OTLP plugin to return a BatchSpanProcessor derived from the\nexporter once more.\n\nSigned-off-by: Cory Snider <csnider@mirantis.com>"}, {"sha": "811375856825a42c6ddd8374e9dcda89fd958fa3", "time": "2022-04-02T15:12:02Z", "changed_files": ["image.go", "pkg/cri/server/image_pull.go", "pkg/cri/server/service.go", "pkg/kmutex/kmutex.go", "pkg/kmutex/kmutex_test.go"], "title": "CRI: improve image pulling performance\n\nBackground:\n\nWith current design, the content backend uses key-lock for long-lived\nwrite transaction. If the content reference has been marked for write\ntransaction, the other requestes on the same reference will fail fast with\nunavailable error. Since the metadata plugin is based on boltbd which\nonly supports single-writer, the content backend can't block or handle\nthe request too long. It requires the client to handle retry by itself,\nlike OpenWriter - backoff retry helper. But the maximum retry interval\ncan be up to 2 seconds. If there are several concurrent requestes fo the\nsame image, the waiters maybe wakeup at the same time and there is only\none waiter can continue. A lot of waiters will get into sleep and we will\ntake long time to finish all the pulling jobs and be worse if the image\nhas many more layers, which mentioned in issue #4937.\n\nAfter fetching, containerd.Pull API allows several hanlers to commit\nsame ChainID snapshotter but only one can be done successfully. Since\nunpack tar.gz is time-consuming job, it can impact the performance on\nunpacking for same ChainID snapshotter in parallel.\n\nFor instance, the Request 2 doesn't need to prepare and commit, it\nshould just wait for Request 1 finish, which mentioned in pull\nrequest #6318.\n\n```text\n\tRequest 1\tRequest 2\n\n\tPrepare\n\t   |\n\t   |\n\t   |\n\t   |\t\tPrepare\n\tCommit\t\t   |\n\t\t\t   |\n\t\t\t   |\n\t\t\t   |\n\t\t\tCommit(failed on exist)\n```\n\nBoth content backoff retry and unnecessary unpack impacts the performance.\n\nSolution:\n\nIntroduced the duplicate suppression in fetch and unpack context. The\ndeplicate suppression uses key-mutex and single-waiter-notify to support\nsingleflight. The caller can use the duplicate suppression in different\nPullImage handlers so that we can avoid unnecessary unpack and spin-lock\nin OpenWriter.\n\nTest Result:\n\nBefore enhancement:\n\n```bash\n\u279c  /tmp sudo bash testing.sh \"localhost:5000/redis:latest\" 20\ncrictl pull localhost:5000/redis:latest (x20) takes ...\n\nreal\t1m6.172s\nuser\t0m0.268s\nsys\t0m0.193s\n\ndocker pull localhost:5000/redis:latest (x20) takes ...\n\nreal\t0m1.324s\nuser\t0m0.441s\nsys\t0m0.316s\n\n\u279c  /tmp sudo bash testing.sh \"localhost:5000/golang:latest\" 20\ncrictl pull localhost:5000/golang:latest (x20) takes ...\n\nreal\t1m47.657s\nuser\t0m0.284s\nsys\t0m0.224s\n\ndocker pull localhost:5000/golang:latest (x20) takes ...\n\nreal\t0m6.381s\nuser\t0m0.488s\nsys\t0m0.358s\n```\n\nWith this enhancement:\n\n```bash\n\u279c  /tmp sudo bash testing.sh \"localhost:5000/redis:latest\" 20\ncrictl pull localhost:5000/redis:latest (x20) takes ...\n\nreal\t0m1.140s\nuser\t0m0.243s\nsys\t0m0.178s\n\ndocker pull localhost:5000/redis:latest (x20) takes ...\n\nreal\t0m1.239s\nuser\t0m0.463s\nsys\t0m0.275s\n\n\u279c  /tmp sudo bash testing.sh \"localhost:5000/golang:latest\" 20\ncrictl pull localhost:5000/golang:latest (x20) takes ...\n\nreal\t0m5.546s\nuser\t0m0.217s\nsys\t0m0.219s\n\ndocker pull localhost:5000/golang:latest (x20) takes ...\n\nreal\t0m6.090s\nuser\t0m0.501s\nsys\t0m0.331s\n```\n\nTest Script:\n\nlocalhost:5000/{redis|golang}:latest is equal to\ndocker.io/library/{redis|golang}:latest. The image is hold in local registry\nservice by `docker run -d -p 5000:5000 --name registry registry:2`.\n\n```bash\n\nimage_name=\"${1}\"\npull_times=\"${2:-10}\"\n\ncleanup() {\n  ctr image rmi \"${image_name}\"\n  ctr -n k8s.io image rmi \"${image_name}\"\n  crictl rmi \"${image_name}\"\n  docker rmi \"${image_name}\"\n  sleep 2\n}\n\ncrictl_testing() {\n  for idx in $(seq 1 ${pull_times}); do\n    crictl pull \"${image_name}\" > /dev/null 2>&1 &\n  done\n  wait\n}\n\ndocker_testing() {\n  for idx in $(seq 1 ${pull_times}); do\n    docker pull \"${image_name}\" > /dev/null 2>&1 &\n  done\n  wait\n}\n\ncleanup > /dev/null 2>&1\n\necho 3 > /proc/sys/vm/drop_caches\nsleep 3\necho \"crictl pull $image_name (x${pull_times}) takes ...\"\ntime crictl_testing\necho\n\necho 3 > /proc/sys/vm/drop_caches\nsleep 3\necho \"docker pull $image_name (x${pull_times}) takes ...\"\ntime docker_testing\n```\n\nFixes: #4937\nClose: #4985\nClose: #6318\n\nSigned-off-by: Wei Fu <fuweid89@gmail.com>"}, {"sha": "2689432bfaa969983595ecbd98f4a7e6d1cb3baa", "time": "2022-03-25T03:56:21Z", "changed_files": ["pkg/process/io_test.go"], "title": "Fix error message in TestNewBinaryIO\n\nSigned-off-by: Shengjing Zhu <zhsj@debian.org>"}, {"sha": "fe426227d4ccb06fc5cbe7f11aa8eefc8d77768a", "time": "2022-03-23T22:48:42Z", "changed_files": ["snapshots/native/native.go"], "title": "native: fix deadlock from leaving transactions open\n\nSigned-off-by: Tonis Tiigi <tonistiigi@gmail.com>"}, {"sha": "df93940fb2a63c78791de006fb9b599a9005099e", "time": "2022-03-23T15:12:54Z", "changed_files": ["cmd/ctr/commands/images/mount.go"], "title": "fix: ctr images mount with snapshotter option can't get snapshotter\n\nSigned-off-by: Qian Zhang <cosmoer@qq.com>"}, {"sha": "067611fdeacd70b3e59d9f3d802ed8505a932b09", "time": "2022-03-21T19:07:10Z", "changed_files": ["api/next.pb.txt", "api/services/content/v1/content.pb.go", "api/services/content/v1/content.proto"], "title": "Remove enumvalue_customname, goproto_enum_prefix and enum_customname\n\nThis commit removes gogoproto.enumvalue_customname,\ngogoproto.goproto_enum_prefix and gogoproto.enum_customname.\n\nAll of them make proto-generated Go code more idiomatic, but we already\ndon't use these enums in our external-surfacing types and they are anyway\nnot supported by Google's official toolchain (see #6564).\n\nSigned-off-by: Kazuyoshi Kato <katokazu@amazon.com>"}, {"sha": "bfde58e3cdc0d16b24342886db319a2a2b0964b9", "time": "2022-03-09T00:26:48Z", "changed_files": ["pkg/cri/opts/spec_windows.go", "pkg/cri/opts/spec_windows_test.go"], "title": "Bug fix for mount path handling\n\nCurrently when handling 'container_path' elements in container mounts we simply call\nfilepath.Clean on those paths. However, filepath.Clean adds an extra '.' if the path is a\nsimple drive letter ('E:' or 'Z:' etc.). These type of paths cause failures (with incorrect\nparameter error) when creating containers via hcsshim. This commit checks for such paths\nand doesn't call filepath.Clean on them.\nIt also adds a new check to error out if the destination path is a C drive and moves the\ndst path checks out of the named pipe condition.\n\nSigned-off-by: Amit Barve <ambarve@microsoft.com>"}, {"sha": "040babe0030919730cc7903526dc174c022569c1", "time": "2022-03-16T16:57:48Z", "changed_files": [".empty-mod/go.mod", "go.mod"], "title": "Vendor dependencies with module graph pruning\n\nThe empty-mod hack no longer works with Go 1.18.\n\nThis commit fixes #6586.\n\nSigned-off-by: Kazuyoshi Kato <katokazu@amazon.com>"}, {"sha": "9aadef1bee81d9377d481cfa53703d51bbaa7eca", "time": "2022-03-17T13:13:19Z", "changed_files": ["go.mod", "go.sum", "integration/client/go.sum", "vendor/golang.org/x/crypto/ed25519/ed25519.go", "vendor/golang.org/x/crypto/ed25519/ed25519_go113.go"], "title": "vendor: golang.org/x/crypto v0.0.0-20220315160706-3147a52a75dd\n\nfull diff: https://github.com/golang/crypto/compare/32db794688a5...3147a52a75dd\n\nThis version contains a fix for CVE-2022-27191 (not sure if it affects us).\n\nFrom the golang mailing list:\n\n    Hello gophers,\n\n    Version v0.0.0-20220315160706-3147a52a75dd of golang.org/x/crypto/ssh implements\n    client authentication support for signature algorithms based on SHA-2 for use with\n    existing RSA keys.\n\n    Previously, a client would fail to authenticate with RSA keys to servers that\n    reject signature algorithms based on SHA-1. This includes OpenSSH 8.8 by default\n    and\u2014starting today March 15, 2022 for recently uploaded keys.\n\n    We are providing this announcement as the error (\u201cssh: unable to authenticate\u201d)\n    might otherwise be difficult to troubleshoot.\n\n    Version v0.0.0-20220314234659-1baeb1ce4c0b (included in the version above) also\n    fixes a potential security issue where an attacker could cause a crash in a\n    golang.org/x/crypto/ssh server under these conditions:\n\n    - The server has been configured by passing a Signer to ServerConfig.AddHostKey.\n    - The Signer passed to AddHostKey does not also implement AlgorithmSigner.\n    - The Signer passed to AddHostKey does return a key of type \u201cssh-rsa\u201d from its PublicKey method.\n\n    Servers that only use Signer implementations provided by the ssh package are\n    unaffected. This is CVE-2022-27191.\n\n    Alla prossima,\n\n    Filippo for the Go Security team\n\nSigned-off-by: Sebastiaan van Stijn <github@gone.nl>"}, {"sha": "2a0b2ee9ebc11dc8d707064749564b666e10fe7a", "time": "2022-03-11T15:50:20Z", "changed_files": ["cmd/ctr/commands/cni.go", "cmd/ctr/commands/run/run.go", "cmd/ctr/commands/run/run_unix.go", "cmd/ctr/commands/tasks/kill.go"], "title": "fix: ctr run --cni get failed\n\n   when   user  executes ctr run --cni to start a container,it will call cni plugin to create network .But when user kills it,the network won\u2019t be removed. if we run a container with same namespace and name again will trigger a bug. we should remove the network when user kills task if it enables cni plugin.\n\nFix:#6604\n\nSigned-off-by: SongJiang Han <songjiang.dark@gmail.com>"}, {"sha": "b8bf504e948557f1cc17e6e56c255ff19c9e9dca", "time": "2022-03-12T05:33:32Z", "changed_files": [".golangci.yml", "metadata/boltutil/helpers.go", "metadata/containers_test.go", "metadata/images_test.go", "oci/spec_opts_test.go", "services/containers/helpers.go", "services/images/helpers.go"], "title": "Enable gosec linter for golangci-lint\n\n`gosec` linter is able to identify issues described in #6584\n\ne.g.\n\n$ git revert 54e95e6b880912e489529be120d4ecead80dbd90\n[gosec dfc8ca1ec] Revert \"fix Implicit memory aliasing in for loop\"\n 2 files changed, 2 deletions(-)\n\n$ make check\n+ proto-fmt\n+ check\nGOGC=75 golangci-lint run\ncontainerstore.go:192:54: G601: Implicit memory aliasing in for loop. (gosec)\n\t\tcontainers = append(containers, containerFromProto(&container))\n\t\t                                                   ^\nimage_store.go:132:42: G601: Implicit memory aliasing in for loop. (gosec)\n\t\timages = append(images, imageFromProto(&image))\n\t\t                                       ^\nmake: *** [check] Error 1\n\nI also disabled following two settings which prevent the linter to show a complete list of issues.\n\n* max-issues-per-linter (default 50)\n* max-same-issues (default 3)\n\nFurthermore enabling gosec revealed many other issues. For now I blacklisted the ones except G601.\n\nWill create separate tasks to address them one by one moving next.\n\nSigned-off-by: Henry Wang <henwang@amazon.com>"}, {"sha": "ba1674389fde6d79803a024410d603ac76294ab3", "time": "2022-03-12T19:32:31Z", "changed_files": ["cmd/containerd-shim/main_unix.go", "cmd/containerd-stress/exec_worker.go", "cmd/containerd-stress/main.go", "cmd/containerd-stress/worker.go", "cmd/containerd/command/main_unix.go"], "title": "typo fixes under cmd.\n\nSigned-off-by: Tomoya.Fujita <Tomoya.Fujita@sony.com>"}, {"sha": "2a425990cf16650c7acb1d44e0d03578e60e91d5", "time": "2022-03-10T11:55:03Z", "changed_files": ["cmd/ctr/commands/commands.go", "cmd/ctr/commands/commands_unix.go", "cmd/ctr/commands/commands_windows.go", "cmd/ctr/commands/run/run_windows.go"], "title": "Implement `--device idType://id` for `ctr run` on Windows\n\nAlso fixes the issue that `ctr run` on Windows offered help for the\nnon-Windows implementation, but was silently ignored.\n\nSigned-off-by: Paul \"TBBle\" Hampson <Paul.Hampson@Pobox.com>"}, {"sha": "807ded41f0ac99c795ecf8acf20103d0ebdf0973", "time": "2022-02-18T22:25:17Z", "changed_files": ["platforms/platforms_test.go", "platforms/platforms_windows_test.go"], "title": "Update TestNormalize to only test Windows\n\nThe output of platforms.DefaultSpec() and the normalized version of the\ndefault platform on 32- and 64-bit ARM are not comparable. This test\nwas added to validate not losing Windows-specific information during\nnormalize of the platform object, so for now we are moving this to be a\nWindows-only test until we resolve the right behavior on ARM.\n\nSigned-off-by: Phil Estes <estesp@amazon.com>"}, {"sha": "0d0b2bd4fe0551464e1ab6adc39077e833be8746", "time": "2022-03-08T23:24:50Z", "changed_files": ["snapshots/devmapper/snapshotter.go", "snapshots/devmapper/snapshotter_test.go"], "title": "Mount devmapper xfs file system with \"nouuid\" option.\n\nTwo xfs file systems with same UUID can not be mounted on the same system.\nHowever devmapper snapshots will have same UUID as original filesystem.\n\nThis patch fixes the bug by mounting a xfs file system with \"nouuid\" option.\n\nSigned-off-by: Henry Wang <henwang@amazon.com>"}, {"sha": "894e7800149feb7c184c90ed117ad0f61838833d", "time": "2022-03-07T08:46:25Z", "changed_files": ["remotes/errors/errors.go"], "title": "Improve ErrUnexpectedStatus default string\n\nSigned-off-by: Fabian Hoffmann <fabian.hoffmann@posteo.de>"}, {"sha": "7b045ea5f0853b3b1cea44a3d4a31d924375c9ca", "time": "2022-02-05T00:55:47Z", "changed_files": ["cmd/ctr/commands/commands.go", "runtime/v2/manager.go", "runtime/v2/manager_test.go", "runtime/v2/shim/util.go"], "title": "ctr: improve error relative shim path error msg\n\naddresses https://github.com/containerd/containerd/issues/6464\n\nReturn an error if a runtime provided is relative.\n\nAdd context to the usage for `ctr run --runtime` indicating that\nabsolute path to runtime binary must be provided.\n\nSigned-off-by: Gavin Inglis <giinglis@amazon.com>"}, {"sha": "0c79257f594737e00acbe1b26338c9d8d22697f4", "time": "2022-03-01T23:28:51Z", "changed_files": ["cmd/ctr/commands/run/run_windows.go"], "title": "Add --user support for ctr run Windows\n\nAdds the ability to override the default user\nContainerUser with a custom user if present in\nthe image or ContainerAdministrator if needed.\n\nSigned-off-by: Justin Terry <jlterry@amazon.com>"}, {"sha": "775facd573f64b9f989716123ff7ee02775ec6ca", "time": "2022-02-27T15:16:03Z", "changed_files": ["integration/container_update_resources_test.go"], "title": "cri: fix integration test on cgroupsv2 system\n\nTestUpdateContainerResources_MemoryLimit still uses old method to\ncheck memlimit in cgroup.\n\nSigned-off-by: Shengjing Zhu <zhsj@debian.org>"}, {"sha": "296f75bd0717f4c09c74dea1ce660b79da454dd3", "time": "2022-02-16T18:08:14Z", "changed_files": ["api/events/container.pb.go", "api/events/container.proto", "api/events/content.pb.go", "api/events/content.proto", "api/events/image.pb.go", "api/events/image.proto", "api/events/namespace.pb.go", "api/events/namespace.proto", "api/events/snapshot.pb.go", "api/events/snapshot.proto"], "title": "Do not use weak import\n\nAccording to https://github.com/protocolbuffers/protobuf/issues/9184\n\n> Weak fields are an old and deprecated internal-only feature that we never\n> open sourced.\n\nThis blocks us to upgrade protoc.\n\nFixes #6232.\n\nSigned-off-by: Kazuyoshi Kato <katokazu@amazon.com>"}, {"sha": "481fb923c591944bbaef88a94ac4da1d17552a53", "time": "2021-12-06T13:54:59Z", "changed_files": ["go.mod", "go.sum", "integration/client/go.sum", "pkg/cri/streaming/server.go", "vendor/github.com/emicklei/go-restful/v3/.gitignore", "vendor/github.com/emicklei/go-restful/v3/.goconvey", "vendor/github.com/emicklei/go-restful/v3/.travis.yml"], "title": "go.mod: update to github.com/emicklei/go-restful/v3 v3.7.3\n\nfull diff: https://github.com/emicklei/go-restful/compare/v2.9.5...v3.7.3\n\n- Switch to using go modules\n- Add check for wildcard to fix CORS filter\n- Add check on writer to prevent compression of response twice\n- Add OPTIONS shortcut WebService receiver\n- Add Route metadata to request attributes or allow adding attributes to routes\n- Add wroteHeader set\n- Enable content encoding on Handle and ServeHTTP\n- Feat: support google custom verb\n- Feature: override list of method allowed without content-type\n- Fix Allow header not set on '405: Method Not Allowed' responses\n- Fix Go 1.15: conversion from int to string yields a string of one rune\n- Fix WriteError return value\n- Fix: use request/response resulting from filter chain\n- handle path params with prefixes and suffixes\n- HTTP response body was broken, if struct to be converted to JSON has boolean value\n- List available representations in 406 body\n- Support describing response headers\n- Unwrap function in filter chain + remove unused dispatchWithFilters\n\nSigned-off-by: Sebastiaan van Stijn <github@gone.nl>"}, {"sha": "8b9571e348da88a59afcabc4d687c1414ffc0c0f", "time": "2022-02-05T00:00:56Z", "changed_files": ["cmd/containerd-stress/exec_worker.go"], "title": "containerd-stress: start task ctr before starting execs\n\nFor some runtimes, the container is not ready for exec until the\ninitial container task has been started (as opposed to just having the task created).\n\nMore specifically, running containerd-stress with --exec would break\nwith Kata Container shim, since the sandbox is not created until a\nstart is issued. By starting the container's primary task before adding\nexec's, we can avoid:\n```\nerror=\"cannot enter container exec-container-1, with err Sandbox not running, impossible to enter the container: unknown\"\n```\n\nSigned-off-by: Eric Ernst <eric_ernst@apple.com>"}, {"sha": "b63000c65de9ad1ca256459ad60485629718434a", "time": "2022-02-04T15:27:14Z", "changed_files": ["integration/client/restart_monitor_test.go"], "title": "[Windows][Integration] Enable TestRestartMonitor\n\nWith the release of hcsshim v0.9.2, this test should pass without\nissues on Windows.\n\nSigned-off-by: Gabriel Adrian Samfira <gsamfira@cloudbasesolutions.com>"}, {"sha": "9b1fb82584b6bb780e91fab3ab56282affbb272d", "time": "2022-02-04T11:16:22Z", "changed_files": ["pkg/cri/server/rdt_linux.go"], "title": "cri: fix handling of ignore_rdt_not_enabled_errors config option\n\nWe were not properly ignoring errors from\ngorestrl.rdt.ContainerClassFromAnnotations() causing the config option\nto be ineffective, in practice.\n\nSigned-off-by: Markus Lehtonen <markus.lehtonen@intel.com>"}, {"sha": "821c961c86f370d06bdb6ae3f8bb797821a390c0", "time": "2022-02-03T12:18:43Z", "changed_files": ["pkg/oom/v2/v2.go"], "title": "pkg/oom/v2: handle EventChan routine shutdown quietly\n\nWhen the cgroup is removed, EventChan is closed (this was pulled in by\n8d69c041c52ac688430df7fd540018bf74f341c2). This results in a nil error\nbeing received. Don't log an error in that case but instead return.\n\nSigned-off-by: Jeremi Piotrowski <jpiotrowski@microsoft.com>"}, {"sha": "8d69c041c52ac688430df7fd540018bf74f341c2", "time": "2022-02-02T00:57:51Z", "changed_files": ["go.mod", "go.sum", "integration/client/go.mod", "integration/client/go.sum", "vendor/github.com/containerd/cgroups/go.mod", "vendor/github.com/containerd/cgroups/go.sum", "vendor/github.com/containerd/cgroups/rdma.go", "vendor/github.com/containerd/cgroups/v2/manager.go", "vendor/modules.txt"], "title": "Update cgroups to v1.0.3\n\nPull in latest cgroups to pick up leak fixes\n\nSigned-off-by: Derek McGowan <derek@mcg.dev>"}, {"sha": "34f7173491c45cca5c19643b54cc6f9fe0f92f04", "time": "2022-01-31T06:37:41Z", "changed_files": ["contrib/seccomp/seccomp_default.go"], "title": "seccomp: kernel 5.16 (futex_waitv)\n\nAllow `futex_waitv` by default.\nSee https://www.phoronix.com/scan.php?page=news_item&px=FUTEX2-futex-waiv-More-Archs\n\nNote: libseccomp does not cover kernel 5.16 at this moment:\nhttps://github.com/seccomp/libseccomp/blob/51b50f95e1fb717e4560818f8b90b7ebde314ad1/src/syscalls.csv\n\nSigned-off-by: Akihiro Suda <akihiro.suda.cz@hco.ntt.co.jp>"}, {"sha": "8632bdcb7bd64b9939455c1184637f8225e0ce5d", "time": "2022-01-31T06:36:40Z", "changed_files": ["contrib/seccomp/seccomp_default.go"], "title": "seccomp: kernel 5.15 (process_mrelease)\n\nAllow `process_mrelease` by default.\n\nSee https://lwn.net/Articles/864184/\n\nSigned-off-by: Akihiro Suda <akihiro.suda.cz@hco.ntt.co.jp>"}, {"sha": "c013db69656f8c4fc27b740f1c29ff6015becf6b", "time": "2022-01-31T06:31:37Z", "changed_files": ["contrib/seccomp/seccomp_default.go"], "title": "seccomp: kernel 5.14 (quotactl_fd, memfd_secret)\n\n- Allow `quotactl_fd` when `CAP_SYS_ADMIN` is granted.\n  See https://lwn.net/Articles/859679/\n\n- Allow `memfd_secret` by default.\n  See https://lwn.net/Articles/865256/\n\nSigned-off-by: Akihiro Suda <akihiro.suda.cz@hco.ntt.co.jp>"}, {"sha": "17a2831f703ee315e51bd4f10b17eb7855fb45ad", "time": "2022-01-31T06:29:38Z", "changed_files": ["contrib/seccomp/seccomp_default.go"], "title": "seccomp: kernel 5.13 (landlock_{add_rule,create_ruleset,restrict_self})\n\nAllow the following syscalls by default:\n- `landlock_add_rule`\n- `landlock_create_ruleset`\n- `landlock_restrict_self`\n\nSee https://landlock.io/\n\nSigned-off-by: Akihiro Suda <akihiro.suda.cz@hco.ntt.co.jp>"}, {"sha": "813a061fe13998dfaaceec6173448d0c12434e7b", "time": "2022-01-26T14:26:35Z", "changed_files": ["oci/spec_opts.go"], "title": "oci: use readonly mount to read user/group info\n\nIn linux kernel, the umount writable-mountpoint will try to do sync-fs\nto make sure that the dirty pages to the underlying filesystems. The many\nnumber of umount actions in the same time maybe introduce performance\nissue in IOPS limited disk.\n\nWhen CRI-plugin creates container, it will temp-mount rootfs to read\nthat UID/GID info for entrypoint. Basically, the rootfs is writable\nsnapshotter and then after read, umount will invoke sync-fs action.\n\nFor example, using overlayfs on ext4 and use bcc-tools to monitor\next4_sync_fs call.\n\n```\n// uname -a\nLinux chaofan 5.13.0-27-generic #29~20.04.1-Ubuntu SMP Fri Jan 14 00:32:30 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux\n\n// open terminal 1\nkubectl run --image=nginx --image-pull-policy=IfNotPresent nginx-pod\n\n// open terminal 2\n/usr/share/bcc/tools/stackcount ext4_sync_fs -i 1 -v -P\n\n  ext4_sync_fs\n  sync_filesystem\n  ovl_sync_fs\n  __sync_filesystem\n  sync_filesystem\n  generic_shutdown_super\n  kill_anon_super\n  deactivate_locked_super\n  deactivate_super\n  cleanup_mnt\n  __cleanup_mnt\n  task_work_run\n  exit_to_user_mode_prepare\n  syscall_exit_to_user_mode\n  do_syscall_64\n  entry_SYSCALL_64_after_hwframe\n  syscall.Syscall.abi0\n  github.com/containerd/containerd/mount.unmount\n  github.com/containerd/containerd/mount.UnmountAll\n  github.com/containerd/containerd/mount.WithTempMount.func2\n  github.com/containerd/containerd/mount.WithTempMount\n  github.com/containerd/containerd/oci.WithUserID.func1\n  github.com/containerd/containerd/oci.WithUser.func1\n  github.com/containerd/containerd/oci.ApplyOpts\n  github.com/containerd/containerd.WithSpec.func1\n  github.com/containerd/containerd.(*Client).NewContainer\n  github.com/containerd/containerd/pkg/cri/server.(*criService).CreateContainer\n  github.com/containerd/containerd/pkg/cri/server.(*instrumentedService).CreateContainer\n  k8s.io/cri-api/pkg/apis/runtime/v1._RuntimeService_CreateContainer_Handler.func1\n  github.com/containerd/containerd/services/server.unaryNamespaceInterceptor\n  github.com/grpc-ecosystem/go-grpc-middleware.ChainUnaryServer.func1.1.1\n  github.com/grpc-ecosystem/go-grpc-prometheus.(*ServerMetrics).UnaryServerInterceptor.func1\n  github.com/grpc-ecosystem/go-grpc-middleware.ChainUnaryServer.func1.1.1\n  go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc.UnaryServerInterceptor.func1\n  github.com/grpc-ecosystem/go-grpc-middleware.ChainUnaryServer.func1.1.1\n  github.com/grpc-ecosystem/go-grpc-middleware.ChainUnaryServer.func1\n  k8s.io/cri-api/pkg/apis/runtime/v1._RuntimeService_CreateContainer_Handler\n  google.golang.org/grpc.(*Server).processUnaryRPC\n  google.golang.org/grpc.(*Server).handleStream\n  google.golang.org/grpc.(*Server).serveStreams.func1.2\n  runtime.goexit.abi0\n    containerd [34771]\n    1\n```\n\nIf there are comming several create requestes, umount actions might\nbring high IO pressure on the /var/lib/containerd's underlying disk.\n\nAfter checkout the kernel code[1], the kernel will not call\n__sync_filesystem if the mount is readonly. Based on this, containerd\nshould use readonly mount to get UID/GID information.\n\nReference:\n\n* [1] https://elixir.bootlin.com/linux/v5.13/source/fs/sync.c#L61\n\nCloses: #4604\n\nSigned-off-by: Wei Fu <fuweid89@gmail.com>"}, {"sha": "c0e00f19abe3aabe04769b75fea51b7b5cb69ee7", "time": "2022-01-27T09:34:27Z", "changed_files": ["remotes/docker/authorizer.go"], "title": "fix acr fetch token 400\n\nSigned-off-by: ye.sijun <junnplus@gmail.com>"}, {"sha": "4aff7431feaa0ab94ed16d36f0ed940db0ec3948", "time": "2022-01-25T19:11:20Z", "changed_files": ["images/archive/importer.go"], "title": "Fix possibly incorrect media type default on import\n\nAs reported, running import twice without using the compress import\noption means that the content store will have existing layers during the\nsecond import and the existing code hardcodes existing layer media type\nto compressed. This fixes the issue by actually reading the header bytes\nfrom the store and setting the media type appropriately.\n\nSigned-off-by: Phil Estes <estesp@amazon.com>"}, {"sha": "31a710c492ecb225ecbc4d43fddc2c36ec962f16", "time": "2022-01-20T16:20:34Z", "changed_files": ["integration/client/container_test.go", "runtime/v2/manager.go"], "title": "fix: should not send 137 code event if cmd is notfound\n\nShimV2 has shim.Delete command to cleanup task's temporary resource,\nlike bundle folder. Since the shim server exits and no persistent store\nis for task's exit code, the result of shim.Delete is always 137 exit\ncode, like the task has been killed.\n\nAnd the result of shim.Delete can be used as task event only when the\nshim server is killed somehow after container is running. Therefore,\ndockerd, which watches task exit event to update status of container,\ncan report correct status.\n\nBack to the issue #6429, the container is not running because the\nentrypoint is not found. Based on this design, we should not send\n137 exitcode event to subscriber.\n\nThis commit is aimed to remove shim instance first and then the\n`cleanupAfterDeadShim` should not send event.\n\nSimilar Issue: #4769\nFix #6429\n\nSigned-off-by: Wei Fu <fuweid89@gmail.com>"}, {"sha": "936faf9c98d7dd31b3e4a6b5f82eca74676cbac8", "time": "2022-01-20T07:08:35Z", "changed_files": ["remotes/docker/scope.go", "remotes/docker/scope_test.go"], "title": "fix empty scopes return\n\nSigned-off-by: ye.sijun <junnplus@gmail.com>"}, {"sha": "af83e9af10cb7c0b0aa116914b6e58592b8c0f05", "time": "2022-01-19T03:39:14Z", "changed_files": ["platforms/compare.go", "platforms/compare_test.go", "platforms/database.go"], "title": "platforms: add support for matching amd64 variants\n\nCorrectly matches optional variants for amd64\narch. These should be used for standardized values\nv1-v4 from https://en.wikipedia.org/wiki/X86-64#Microarchitecture_levels.\n\nV1 remains the default and is cleared by default.\nPulling a higher variant will match the highest\navailable platform lower or equal to the provided one\nwhen platformVector is used.\n\nSigned-off-by: Tonis Tiigi <tonistiigi@gmail.com>"}, {"sha": "af39d2ad71a599b2873ee657c5caf9f9d8203354", "time": "2022-01-19T01:21:52Z", "changed_files": ["go.mod", "go.sum", "integration/client/go.mod", "integration/client/go.sum", "vendor/github.com/Microsoft/hcsshim/.golangci.yml", "vendor/github.com/Microsoft/hcsshim/go.mod", "vendor/github.com/Microsoft/hcsshim/go.sum", "vendor/github.com/Microsoft/hcsshim/internal/hcs/errors.go", "vendor/github.com/Microsoft/hcsshim/internal/hcs/process.go", "vendor/github.com/Microsoft/hcsshim/internal/winapi/console.go", "vendor/github.com/Microsoft/hcsshim/internal/winapi/process.go", "vendor/github.com/Microsoft/hcsshim/internal/winapi/winapi.go", "vendor/github.com/Microsoft/hcsshim/internal/winapi/zsyscall_windows.go", "vendor/github.com/Microsoft/hcsshim/osversion/windowsbuilds.go", "vendor/modules.txt"], "title": "go.mod: Update hcsshim to v0.9.2\n\nThis tag brings in some bug fixes related to waiting for containers to terminate and\ntrying to kill an already terminated process, as well as tty support (exec -it) for\nWindows Host Process Containers.\n\nSigned-off-by: Daniel Canter <dcanter@microsoft.com>"}, {"sha": "69ae95531cfba9648be149f2e8568729dbf2eac9", "time": "2022-01-13T17:26:05Z", "changed_files": ["tracing/plugin/otlp.go"], "title": "tracing: fix OTLP tracer's initialization\n\n- insecure.NewCredential was simply wrong. It has to use\n  otlptracegrpc.WithInsecure to disable TLS.\n- context.WithTimeout is nice to have, in case the endpoint is not\n  correctly configured.\n  Otherwise, the plugin initialization blocks indefinitely.\n- grpc.WithReturnConnectionError is nice to have.\n  Otherwise, otlptracegrpc.New returns \"context deadline exceeded\"\n  without underlying errors.\n- TraceSamplingRatio should be 1.0 by default.\n  Otherwise, users need to configure both io.containerd.internal.v1.tracing\n  and io.containerd.tracing.processor.v1.otlp.\n\nSigned-off-by: Kazuyoshi Kato <katokazu@amazon.com>"}, {"sha": "d05194f0a7f33c2885e67e5ce1da87361a58bf00", "time": "2022-01-11T00:33:37Z", "changed_files": ["cmd/ctr/commands/images/push.go"], "title": "ctr: flag to toggle non-distributable blob push\n\nWith this flag, ctr will no longer automatically push non-distributable\nartifacts by default.\n\nSigned-off-by: Brian Goff <cpuguy83@gmail.com>"}, {"sha": "bdc852190bcedbc74dd812acc6e358889090bf73", "time": "2022-01-09T00:00:58Z", "changed_files": ["test/e2e_node/gci-init.sh"], "title": "test: e2e node COS cgroupv2 script\n\nOn newer COS M97 images, cgroupv2 is enabled out of the box. It is\nenabled using default systemd configuration and does not have\n`systemd.unified_cgroup_hierarchy` present `/proc/cmdline`. As a result, the\ncheck for manual cgroupv2 enablement should be improved to not only check\n`/proc/cmdline`, but also to see if it's enabled on the system using `stat\n-fc %T /sys/fs/cgroup/`\n\nSigned-off-by: David Porter <porterdavid@google.com>"}, {"sha": "8aca314ddb4feb71072f1a8fa76d144026dd7939", "time": "2022-01-07T20:31:02Z", "changed_files": ["contrib/apparmor/template.go"], "title": "Update error message for apparmor parser\n\nSigned-off-by: Derek McGowan <derek@mcg.dev>"}, {"sha": "48c7529de2003a3b3cdfc6119796663fde32c681", "time": "2022-01-07T20:23:18Z", "changed_files": ["content/local/writer.go"], "title": "Fix incorrect error wrapped when closing ingest file\n\nSigned-off-by: Derek McGowan <derek@mcg.dev>"}, {"sha": "0c2c289d4c833e3f54d515f98c7e1fc0f64655e6", "time": "2022-01-07T20:19:23Z", "changed_files": ["content/helpers.go"], "title": "Fix seek error used without nil check\n\nSigned-off-by: Derek McGowan <derek@mcg.dev>"}, {"sha": "8816006d1e11e1a45ed2fdc4793ef48a444ed8e8", "time": "2022-01-07T20:16:00Z", "changed_files": ["mount/temp.go", "remotes/handlers.go"], "title": "Fix followup items from errors replacement\n\nSigned-off-by: Derek McGowan <derek@mcg.dev>"}, {"sha": "adee2c797433f8de084e6500bf901b6ade75c24f", "time": "2022-01-07T17:05:59Z", "changed_files": ["contrib/seccomp/seccomp_default.go"], "title": "seccomp: add support for \"swapcontext\" syscall in default policy\n\nThis system call is only available on 32- and 64-bit PowerPC, it is used\nby modern programming language implementations to implement coroutine\nfeatures through userspace context switches.\n\nmoby [1] and systemd nspawn [2] already whitelist this system call so it\nmakes sense to whitelist it in containerd as well.\n\n[1]: https://github.com/moby/moby/pull/43092\n[2]: https://github.com/systemd/systemd/pull/9487\n\nSigned-off-by: S\u00f6ren Tempel <soeren+git@soeren-tempel.net>"}, {"sha": "bbe46b8c43fc2febe316775bc2d4b9d697bbf05c", "time": "2022-01-07T02:19:31Z", "changed_files": ["archive/tar.go", "archive/tar_linux_test.go"], "title": "feat: replace github.com/pkg/errors to errors\n\nSigned-off-by: haoyun <yun.hao@daocloud.io>\nCo-authored-by: zounengren <zouyee1989@gmail.com>"}, {"sha": "85326d76f4115ffb0fbb4fd4ee23ca029aff4a68", "time": "2021-12-28T09:07:19Z", "changed_files": ["integration/shim_dial_unix_test.go"], "title": "fix: only test abstract unix socket on linux\n\nSigned-off-by: haoyun <yun.hao@daocloud.io>"}, {"sha": "8e6afaa207b0ad1246495a59330ab77f4600b9d8", "time": "2021-12-21T12:39:04Z", "changed_files": ["Makefile.windows"], "title": "Fix $(PWD) issue for Windows makefile\n\nSeems $(PWD) if the shell is powershell may not be inherited properly\nas it ends up being an empty string. The result of this is that using\nmingw's make with powershell is that $(PWD)/bin ends up being /bin and the\nwindows shim will get placed there. make install afterwards will try to find\nthe shim at $pwd/bin and fail.\n\nChanging to CURDIR https://www.gnu.org/software/make/manual/make.html#index-CURDIR\nseems to be a solution here as it's not inherited by the environment and\nis set by make itself so should work across any type of shell.\n\nSigned-off-by: Daniel Canter <dcanter@microsoft.com>"}, {"sha": "ac81297065bcaf33b95316d2f2c3cfc0d1ec887a", "time": "2021-12-21T06:28:47Z", "changed_files": ["runtime/v1/linux/task.go"], "title": "fix: use _ for consistency\n\nSigned-off-by: haoyun <yun.hao@daocloud.io>"}, {"sha": "f39b3ac7eaf52bc7eeb85adb08e521f5477f25f0", "time": "2021-12-21T06:13:39Z", "changed_files": ["cmd/ctr/commands/run/run.go", "cmd/ctr/commands/run/run_unix.go", "cmd/ctr/commands/run/run_windows.go", "oci/spec_opts_windows.go"], "title": "fix(ctr): enable networking for Windows containers\n\nSigned-off-by: Markus Lippert <lippertmarkus@gmx.de>"}, {"sha": "aadae6d50b0a2380c9e7b0aeba4908cc98841bcf", "time": "2021-12-17T15:36:11Z", "changed_files": ["integration/container_stats_test.go"], "title": "Fix flakiness on Windows for list stats\n\nThis change fixes flakiness on Windows for TestContainerListStatsWithSandboxIdFilter\n\nSigned-off-by: Gabriel Adrian Samfira <gsamfira@cloudbasesolutions.com>"}, {"sha": "34c4abc341bd1fb24a37458caaab59716c6cd395", "time": "2021-12-03T03:31:12Z", "changed_files": ["Makefile"], "title": "Fix default makefile target for windows\n\nA recent change altered the default target that would get run for the makefile.\nThis ended up making a standalone 'make' invocation only build the Windows\nshim and nothing else. This was affecting the CI of some other projects that\nrelied on 'make' building containerd, ctr, and friends.\n\nSigned-off-by: Daniel Canter <dcanter@microsoft.com>"}, {"sha": "f1c7993311b49bf6274bbb94f6165f9867db4e31", "time": "2021-12-13T08:03:17Z", "changed_files": ["pkg/cri/server/helpers_linux.go", "pkg/seutil/seutil.go"], "title": "seutil: Fix setting the \"container_kvm_t\" label\n\nThe ability to handle KVM based runtimes with SELinux has been added as\npart of d715d009061edf5ed0da5aa81fe7b6d2a6b3c10c.\n\nHowever, that commit introduced some logic to check whether the\n\"container_kvm_t\" label would or not be present in the system, and while\nthe intentions were good, there's two major issues with the approach:\n1. Inspecting \"/etc/selinux/targeted/contexts/customizable_types\" is not\n   the way to go, as it doesn't list the \"container_kvm_t\" at all.\n2. There's no need to check for the label, as if the label is invalid an\n   \"Invalid Label\" error will be returned and that's it.\n\nWith those two in mind, let's simplify the logic behind setting the\n\"container_kvm_t\" label, removing all the unnecessary code.\n\nHere's an output of VMM process running, considering:\n* The state before this patch:\n  ```\n  $ containerd --version\n  containerd github.com/containerd/containerd v1.6.0-beta.3-88-g7fa44fc98 7fa44fc98f4bde30fa154c361e11609f742aaccb\n  $ kubectl apply -f ~/simple-pod.yaml\n  pod/nginx created\n  $ ps -auxZ | grep cloud-hypervisor\n  system_u:system_r:container_runtime_t:s0 root 609717 4.0  0.5 2987512 83588 ?    Sl   08:32   0:00 /usr/bin/cloud-hypervisor --api-socket /run/vc/vm/be9d5cbabf440510d58d89fc8a8e77c27e96ddc99709ecaf5ab94c6b6b0d4c89/clh-api.sock\n  ```\n\n* The state after this patch:\n  ```\n  $ containerd --version\n  containerd github.com/containerd/containerd v1.6.0-beta.3-89-ga5f2113c9 a5f2113c9fc15b19b2c364caaedb99c22de4eb32\n  $ kubectl apply -f ~/simple-pod.yaml\n  pod/nginx created\n  $ ps -auxZ | grep cloud-hypervisor\n  system_u:system_r:container_kvm_t:s0:c638,c999 root 614842 14.0  0.5 2987512 83228 ? Sl 08:40   0:00 /usr/bin/cloud-hypervisor --api-socket /run/vc/vm/f8ff838afdbe0a546f6995fe9b08e0956d0d0cdfe749705d7ce4618695baa68c/clh-api.sock\n  ```\n\nNote, the tests were performed using the following configuration snippet:\n```\n[plugins]\n  [plugins.cri]\n    enable_selinux = true\n    [plugins.cri.containerd]\n      [plugins.cri.containerd.runtimes]\n        [plugins.cri.containerd.runtimes.kata]\n           runtime_type = \"io.containerd.kata.v2\"\n           privileged_without_host_devices = true\n```\n\nAnd using the following pod yaml:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx\nspec:\n  runtimeClassName: kata\n  containers:\n  - name: nginx\n    image: nginx:1.14.2\n    ports:\n    - containerPort: 80\n```\n\nFixes: #6371\n\nSigned-off-by: Fabiano Fid\u00eancio <fabiano.fidencio@intel.com>"}, {"sha": "44b28b61ffa450d8e5956409f9a5386cff0fdd49", "time": "2021-12-08T18:00:59Z", "changed_files": ["metadata/namespaces.go", "metadata/namespaces_test.go"], "title": "medatada: make namespaces' deletion error less cryptic\n\nThe error message was unnecessary cryptic. `snapshot-[name]` notation\nwas only used here and hard to understand.\n\nInstead it should say `snapshots on \"...\" snapshotter`.\n\nSigned-off-by: Kazuyoshi Kato <katokazu@amazon.com>"}, {"sha": "9e9ee66bfd6622270db757aafa17466668b40807", "time": "2021-12-12T08:38:18Z", "changed_files": ["integration/restart_test.go"], "title": "integration: deflake TestContainerdRestart\n\nThe CRI-plugin will setup watcher for each container after\nStartContainer or RunPodSandbox. It will cleanup task(container/sandbox)\nif received the exit event from watcher.\n\nThe original test design is to `Delete` sandbox container to get\nNOT_READY state and expect to receive NotFound error. It depends on that\nCRI-plugin cleanups container after `Delete` API. If not, the shim will\nbe cleanup and test code will receive `ttrpc: closed: unknown` or other\nunknown error. It is flaky.\n\nIn this patch, the test will only send the kill signal and wait for the\nexit event. When sandbox exits, the state will and must be NOT_READY.\n\n```plain\n// test fail log\n\n=== RUN TestContainerdRestart\nrestart_test.go:92: Make sure no sandbox is running before test\nrestart_test.go:97: Start test sandboxes and containers\ncommon.go:115: Image \"k8s.gcr.io/pause:3.6\" already exists, not pulling.\ncommon.go:115: Image \"k8s.gcr.io/pause:3.6\" already exists, not pulling.\nrestart_test.go:139:\nError Trace: restart_test.go:139\nError: Should be true\nTest: TestContainerdRestart\nMessages: delete should return not found error but returned failed to delete task: ttrpc: closed: unknown\n--- FAIL: TestContainerdRestart (4.25s)\n\n// containerd log\n\n&TaskExit{ContainerID:4b4c1d1d303c14a2cc759631d163f153ba8536e9ea6821744a509e4a17346184,ID:4b4c1d1d303c14a2cc759631d163f153ba8536e9ea6821744a509e4a17346184,Pid:28430,ExitStatus:137,ExitedAt:2021-12-12 07:56:01.400753012 +0000 UTC,XXX_unrecognized:[],}\"\ntime=\"2021-12-12T07:56:01.401120516Z\" level=debug msg=\"event forwarded\" ns=k8s.io topic=/tasks/exit type=containerd.events.TaskExit\ntime=\"2021-12-12T07:56:01.418934208Z\" level=debug msg=\"event forwarded\" ns=k8s.io topic=/tasks/delete type=containerd.events.TaskDelete\ntime=\"2021-12-12T07:56:01.419192910Z\" level=info msg=\"shim disconnected\" id=4b4c1d1d303c14a2cc759631d163f153ba8536e9ea6821744a509e4a17346184\ntime=\"2021-12-12T07:56:01.419235911Z\" level=warning msg=\"cleaning up after shim disconnected\" id=4b4c1d1d303c14a2cc759631d163f153ba8536e9ea6821744a509e4a17346184 namespace=k8s.io\ntime=\"2021-12-12T07:56:01.419247711Z\" level=info msg=\"cleaning up dead shim\"\ntime=\"2021-12-12T07:56:01.419235311Z\" level=error msg=\"failed sending message on channel\" error=\"write unix /run/containerd/s/18afde7fcde70236eb31b9f43f3bd92af1dc1186583c501aa1396255f87f95d4->@: write: broken pipe\"\ntime=\"2021-12-12T07:56:01.419354712Z\" level=debug msg=\"failed to delete task\" error=\"ttrpc: closed\" id=4b4c1d1d303c14a2cc759631d163f153ba8536e9ea6821744a509e4a17346184\n```\n\nCI Link: `https://pipelines.actions.githubusercontent.com/G4SighzWVVZ6vsyiz7FFMFjLjRzveJHseEnVyibkSq87Cl2x4O/_apis/pipelines/1/runs/9501/signedlogcontent/76?urlExpires=2021-12-12T08%3A42%3A08.0765750Z&urlSigningMethod=HMACV1&urlSignature=pH93isMSFdZUo1ndnZynJpZbPGrEyvt12MO03fgUU7I%3D`\n\nSigned-off-by: Wei Fu <fuweid89@gmail.com>"}, {"sha": "552a27081c5df96766f6cd13ab02638ea81e5823", "time": "2021-12-10T19:13:14Z", "changed_files": ["integration/client/restart_monitor_test.go"], "title": "Disable restart monitor test in Windows\n\nSkip this test until this error can be evaluated and the appropriate\ntest fix or environment configuration can be determined.\n\nSigned-off-by: Derek McGowan <derek@mcg.dev>"}, {"sha": "b7f673790f63168960a438abf4f223f1f7b8e54c", "time": "2021-12-01T11:27:55Z", "changed_files": ["oci/utils_unix.go", "oci/utils_unix_go116_test.go", "oci/utils_unix_go117_test.go", "oci/utils_unix_test.go"], "title": "OCI: Mount (accessible) host devices in privileged rootless containers\n\nAllow rootless containers with privileged to mount devices that are accessible\n(ignore permission errors in rootless mode).\n\nThis patch updates oci.getDevices() to ignore access denied errors on sub-\ndirectories and files within the given path if the container is running with\nuserns enabled.\n\nNote that these errors are _only_ ignored on paths _under_ the specified path,\nand not the path itself, so if `HostDevices()` is used, and `/dev` itself is\nnot accessible, or `WithDevices()` is used to specify a device that is not\naccessible, an error is still produced.\n\nTests were added, which includes a temporary workaround for compatibility\nwith Go 1.16 (we could decide to skip these tests on Go 1.16 instead).\n\nTo verify the patch in a container:\n\n    docker run --rm -v $(pwd):/go/src/github.com/containerd/containerd -w /go/src/github.com/containerd/containerd golang:1.17 sh -c 'go test -v -run TestHostDevices ./oci'\n    === RUN   TestHostDevicesOSReadDirFailure\n    --- PASS: TestHostDevicesOSReadDirFailure (0.00s)\n    === RUN   TestHostDevicesOSReadDirFailureInUserNS\n    --- PASS: TestHostDevicesOSReadDirFailureInUserNS (0.00s)\n    === RUN   TestHostDevicesDeviceFromPathFailure\n    --- PASS: TestHostDevicesDeviceFromPathFailure (0.00s)\n    === RUN   TestHostDevicesDeviceFromPathFailureInUserNS\n    --- PASS: TestHostDevicesDeviceFromPathFailureInUserNS (0.00s)\n    === RUN   TestHostDevicesAllValid\n    --- PASS: TestHostDevicesAllValid (0.00s)\n    PASS\n    ok  \tgithub.com/containerd/containerd/oci\t0.006s\n\nSigned-off-by: Sebastiaan van Stijn <github@gone.nl>"}, {"sha": "54e95e6b880912e489529be120d4ecead80dbd90", "time": "2021-12-06T13:36:31Z", "changed_files": ["containerstore.go", "image_store.go"], "title": "fix Implicit memory aliasing in for loop\n\nSigned-off-by: ningmingxiao <ning.mingxiao@zte.com.cn>"}, {"sha": "d2f1dda0f1e6eef141538ff691e9db43a75cdad0", "time": "2021-12-03T19:30:03Z", "changed_files": ["cmd/containerd/builtins.go", "cmd/containerd/builtins_linux.go", "cmd/containerd/builtins_windows.go"], "title": "Include runtime v2 in default builtins\n\nSigned-off-by: Maksym Pavlenko <pavlenko.maksym@gmail.com>"}, {"sha": "5d4dc57802dcecdcdab1a2e87b0312a006171d40", "time": "2021-12-03T18:40:25Z", "changed_files": ["remotes/docker/fetcher.go"], "title": "remotes/docker: log registry URLs as info instead of debug\n\nRegistry URLs are important and should be logged even the logging level is\ninfo.\n\nFixes #5486.\n\nSigned-off-by: Kazuyoshi Kato <katokazu@amazon.com>"}, {"sha": "533dd1c0ee3a2837ac7ba366f9711b0fab800e75", "time": "2021-12-03T15:04:01Z", "changed_files": ["integration/container_update_resources_test.go"], "title": "fixup: check for swap accounting\n\nSigned-off-by: Danielle Lancashire <dani@builds.terrible.systems>"}, {"sha": "c5b0a18b6ea568ceda225260906b524193078b47", "time": "2021-12-03T13:32:35Z", "changed_files": ["integration/container_update_resources_test.go"], "title": "fixup: handle diff between cgroupsv1 and v2\n\nSigned-off-by: Danielle Lancashire <dani@builds.terrible.systems>"}, {"sha": "9cc0d1f07364d10c1240262c9d6b1b8ff298baf9", "time": "2021-12-03T11:30:08Z", "changed_files": ["integration/images/volume-copy-up/Dockerfile_windows", "integration/images/volume-ownership/Dockerfile_windows"], "title": "Set explicit ACL on test files\n\nIt seems that the default ACLs inherited from the parent folder\non Windows Server 2022, does not include \"CREATOR OWNER\" as it\ndoes on Windows Server 2019. This sets explicit ACLs on test\nfiles.\n\nSigned-off-by: Gabriel Adrian Samfira <gsamfira@cloudbasesolutions.com>"}, {"sha": "94462d8f5d9d2537e82762234365df78f2c6fb56", "time": "2021-12-01T10:51:17Z", "changed_files": ["oci/utils_unix.go", "oci/utils_unix_test.go"], "title": "oci/deviceFromPath(): correctly check device types\n\nThis ports the changes of https://github.com/opencontainers/runc/commit/95a59bf206f86bc449c4ccc22e2c08e78c707eb6\nto this repository.\n\nFrom that PR:\n\n    (mode&S_IFCHR == S_IFCHR) is the wrong way of checking the type of an\n    inode because the S_IF* bits are actually not a bitmask and instead must\n    be checked using S_IF*. This bug was neatly hidden behind a (major == 0)\n    sanity-check but that was removed by [1].\n\n    In addition, add a test that makes sure that HostDevices() doesn't give\n    rubbish results -- because we broke this and fixed this before[2].\n\n    [1]: https://github.com/opencontainers/runc/commit/24388be71e1aef7facd0d78dda22e696c1694272 (\"configs: use different types for .Devices and .Resources.Devices\")\n    [2]: https://github.com/opencontainers/runc/commit/3ed492ad33f37bd3ee6c5de1ebf9a63b04389957 (\"Handle non-devices correctly in DeviceFromPath\")\n\nSigned-off-by: Sebastiaan van Stijn <github@gone.nl>"}]